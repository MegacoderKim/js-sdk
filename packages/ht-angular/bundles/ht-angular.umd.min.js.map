{
  "version": 3,
  "file": "ht-angular.umd.min.js",
  "sources": [
    "ng://ht-angular/app/user-card/user-card.component.ts",
    "ng://ht-angular/app/shared/profile/profile.component.ts",
    "ng://ht-angular/app/shared/battery-icon/battery-icon.component.ts",
    "ng://ht-angular/app/pipes/time-string.pipe.ts",
    "ng://ht-angular/app/pipes/date-string.pipe.ts",
    "ng://ht-angular/app/pipes/name-case.pipe.ts",
    "ng://ht-angular/app/shared/loading-dots/loading-dots.component.ts",
    "ng://ht-angular/app/pipes/dot.pipe.ts",
    "ng://ht-angular/app/shared/loading-data/loading-data.component.ts",
    "ng://ht-angular/app/pipes/date-humanize.pipe.ts",
    "ng://ht-angular/app/pipes/hm-string.pipe.ts",
    "ng://ht-angular/app/pipes/distance-locale.pipe.ts",
    "ng://ht-angular/app/pipes/users-status-string.pipe.ts",
    "ng://ht-angular/app/pipes/action-status-string.pipe.ts",
    "ng://ht-angular/app/pipes/user-sorting-string.pipe.ts",
    "ng://ht-angular/app/pipes/action-sorting-string.pipe.ts",
    "ng://ht-angular/app/pipes/safe-url.pipe.ts",
    "ng://ht-angular/app/pipes/pluralize.pipe.ts",
    "ng://ht-angular/app/shared/button/button.component.ts",
    "ng://ht-angular/app/shared/loading-bar/loading-bar.component.ts",
    "ng://ht-angular/app/shared/dropdown/dropdown.directive.ts",
    "ng://ht-angular/app/shared/shared.module.ts",
    "ng://ht-angular/app/user-card/user-card.module.ts",
    "ng://ht-angular/app/users/users.component.ts",
    "ng://ht-angular/app/users/users.module.ts",
    "ng://ht-angular/app/ht/ht-users.service.ts",
    "ng://ht-angular/app/users-container/users-container.component.ts",
    "ng://ht-angular/app/placeline/placeline.component.ts",
    "ng://ht-angular/app/placeline/placeline.module.ts",
    "ng://ht-angular/app/placeline-container/placeline-container.component.ts",
    "ng://ht-angular/app/users-summary-container/users-summary-container.component.ts",
    "ng://ht-angular/app/placeline-container/placeline-container.module.ts",
    "ng://ht-angular/app/users-summary/users-summary.component.ts",
    "ng://ht-angular/app/users-summary/users-summary.module.ts",
    "ng://ht-angular/app/users-summary-container/users-summary-container.module.ts",
    "ng://ht-angular/app/pagination/pagination.component.ts",
    "ng://ht-angular/app/pagination/pagination.module.ts",
    "ng://ht-angular/app/users-container/users-container.module.ts",
    "ng://ht-angular/app/groups/groups.component.ts",
    "ng://ht-angular/app/groups/groups.module.ts",
    "ng://ht-angular/app/ht/ht-groups.service.ts",
    "ng://ht-angular/app/groups-container/groups-container.component.ts",
    "ng://ht-angular/app/groups-container/groups-container.module.ts",
    "ng://ht-angular/app/groups-chart-container/groups-chart.service.ts",
    "ng://ht-angular/app/groups-chart-container/groups-chart-container.component.ts"
  ],
  "sourcesContent": [
    "import {\n  ChangeDetectionStrategy, Component, EventEmitter, HostBinding, HostListener, Input, OnChanges, OnInit,\n  Output\n} from '@angular/core';\nimport {IUser, IUserAnalytics, IUserData} from \"ht-models\";\nimport * as _ from \"underscore\";\n\n@Component({\n  selector: 'ht-user-card',\n  template: `<div class=\"ht-card-content flex-row flex\">\n  <div class=\"text-left flex-row row-gap-10 flex\">\n    <ht-profile [height]=\"35\" [url]=\"user.photo\"></ht-profile>\n    <div class=\"\">\n      <div class=\"flex-row\">\n        {{user.name | nameCase | dot: 'Unknown users'}}\n      </div>\n      <ng-template [ngIf]=\"showStatus\">\n        <div class=\"user-status-display\" [ngClass]=\"user.status + '-color'\">\n          <div [class.text-warning]=\"user.display.is_warning\">{{user.display.status_text}}</div>\n        </div>\n        <div class=\"flex-row user-status\">\n          <div>{{user.display.sub_status_text}}<span *ngIf=\"user.display.battery\">&nbsp; &bull; &nbsp;</span></div>\n          <ht-battery-icon *ngIf=\"user.display.battery\" [battery]=\"user.display.battery\"></ht-battery-icon>\n        </div>\n      </ng-template>\n      <div class=\"flex-row\" *ngIf=\"!user['segments'] && user['total_distance']\">\n        <div>{{user['total_distance'] | distanceLocale}}</div>\n        <div>&nbsp; &bull; &nbsp;</div>\n        <div>{{user['total_duration'] | hmString:60}}</div>\n      </div>\n      <div class=\"\">\n        {{user['phone']}}\n      </div>\n    </div>\n  </div>\n  <!--<div *ngIf=\"action !== 'loading'; else loading\" [@cardAction]=\"action == 'close' ? 'active' : 'inactive'\" class=\"flex-row\">-->\n    <!--<button class=\"auto ht-btn ht-btn-card text-uppercase\" (click)=\"fireAction()\" *ngIf=\"getActionText()\">-->\n      <!--{{getActionText()}}-->\n    <!--</button>-->\n  <!--</div>-->\n  <ng-template #loading>\n    <div class=\"text-1 flex-row\">\n      <ht-loading-dots class=\"auto\"></ht-loading-dots>\n    </div>\n  </ng-template>\n</div>\n<ng-content></ng-content>\n<!--<div class=\"card-quick-action\" *ngIf=\"action == 'default'\">-->\n  <!--<div class=\"flex-row align-center\">-->\n    <!--<span class=\"element\">View on map &nbsp;</span>-->\n    <!--<i class=\"fa fa-map-o\"></i>-->\n  <!--</div>-->\n<!--</div>-->\n`,\n  styles: [`.ht-card-content {\n  padding: 5px 10px;\n}\n`],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class UserCardComponent implements OnInit, OnChanges {\n  @Input() user: IUserData | IUserAnalytics | IUser;\n  @Input() selectedUserId: string | null = null;\n  @Input() action: 'default' | 'close' | 'loading' | 'detail' = 'default';\n  @Output() onAction = new EventEmitter();\n  showStatus: boolean = true;\n  hovered: boolean = false;\n  // @HostBinding('class') role = 'card is-small is-paddingless flex-row clickable';\n  @HostListener('mouseenter')\n  hoverIn() {\n    this.hovered = true;\n  }\n  @HostListener('mouseleave')\n  hoverOut() {\n    this.hovered = false;\n  }\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  getShowStatus(user: IUserData): boolean {\n    if (user.segments) {\n      return !!user.segments.length && ! _.last(user.segments)['ended_at']\n    }\n    return !!user\n  }\n\n  fireAction() {\n    this.onAction.next({user: this.user, action: this.action});\n    event.stopPropagation()\n  }\n\n  ngOnChanges(a) {\n    // console.log(a, \"change\");\n    this.showStatus = a.user ? this.getShowStatus(a.user.currentValue) : this.showStatus\n  }\n\n  getActionText() {\n    switch (this.action) {\n      case  \"close\":\n        return \"Close\";\n      case \"detail\" :\n        return \"\";\n      case \"loading\":\n        return \"loading\";\n      default:\n        return \"View on Map\"\n    }\n  }\n\n  debug(e) {\n    console.log(e);\n  }\n\n}\n",
    "import {Component, OnInit, Input, ChangeDetectionStrategy} from '@angular/core';\nimport {DomSanitizer} from \"@angular/platform-browser\";\n// const missingUrl = require(\"../../../images/missing.png\");\n\n@Component({\n  selector: 'ht-profile',\n  template: `<div [style.height.px]=\"height\" [style.width.px]=\"height\" class=\"profile-img\" [ngStyle]=\"{ 'background-image': 'url(' + (url || defaultUrl) + ')'}\">\n\n</div>\n`,\n  styles: [`:host .profile-img {\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center;\n  border-radius: 50%;\n}\n`],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ProfileComponent implements OnInit {\n  @Input() url: string;\n  @Input() height: number = 30;\n  defaultUrl: string = \"\";\n  constructor() {\n\n  }\n\n  ngOnInit() {\n    // this.url = this.url || \"images/missing.png\"\n\n  }\n\n}\n",
    "import {ChangeDetectionStrategy, Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'ht-battery-icon',\n  template: `<div *ngIf=\"battery\" [ngClass]=\"layout == 'column' ? 'flex-column column-gap-4 justify-center' : 'flex-row row-gap-4 align-center'\" class=\"\">\n  <div>\n    {{battery}}%\n  </div>\n  <i class=\"fa\" [ngClass]=\"batteryClass(battery)\"></i>\n</div>\n`,\n  styles: [`.text-center {\n  text-align: center;\n}\n.text-muted {\n  color: #798E9B;\n}\n.text-right {\n  text-align: right;\n}\n.text-left {\n  text-align: left;\n}\n.text-1 {\n  font-size: 2em;\n}\n.text-4 {\n  font-size: 0.8em;\n}\n.text-capitalize {\n  text-transform: capitalize;\n}\n.text-uppercase {\n  text-transform: uppercase;\n}\n.text-ontime {\n  color: #58ae5b;\n}\n.text-late {\n  color: #E6413E;\n}\n.text-warning {\n  color: #E6413E !important;\n}\n.text-red {\n  color: #E6413E;\n}\n.text-blue {\n  color: #5496F8;\n}\n.truncate {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n.flex-row {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: row;\n          flex-direction: row;\n}\n.flex-column {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: column;\n          flex-direction: column;\n}\n.column-gap-4 > :not(:last-child) {\n  margin-bottom: 4px;\n}\n.row-gap-4 > :not(:last-child) {\n  margin-right: 4px;\n}\n.column-gap-7 > :not(:last-child) {\n  margin-bottom: 7px;\n}\n.row-gap-7 > :not(:last-child) {\n  margin-right: 7px;\n}\n.column-gap-10 > :not(:last-child) {\n  margin-bottom: 10px;\n}\n.row-gap-10 > :not(:last-child) {\n  margin-right: 10px;\n}\n.column-gap-20 > :not(:last-child) {\n  margin-bottom: 20px;\n}\n.row-gap-20 > :not(:last-child) {\n  margin-right: 20px;\n}\n.wrap {\n  -ms-flex-wrap: wrap;\n      flex-wrap: wrap;\n}\n.flex {\n  -webkit-box-flex: 1;\n      -ms-flex: 1;\n          flex: 1;\n}\n.auto {\n  margin: auto;\n}\n.relative {\n  position: relative;\n}\n.space-between {\n  -webkit-box-pack: justify;\n      -ms-flex-pack: justify;\n          justify-content: space-between;\n}\n.space-around {\n  -ms-flex-pack: distribute;\n      justify-content: space-around;\n}\n.justify-center {\n  -webkit-box-pack: center;\n      -ms-flex-pack: center;\n          justify-content: center;\n}\n.flex-center {\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n}\n.align-center {\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n}\n.clickable {\n  cursor: pointer;\n}\n.round-icon {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  width: 23px;\n  height: 23px;\n  background: #315790;\n  border-radius: 50%;\n}\n.flex-half {\n  -ms-flex-preferred-size: 50%;\n      flex-basis: 50%;\n}\n.link-unstyled {\n  color: inherit;\n}\n.link-unstyled:hover {\n  text-decoration: none;\n}\n.half {\n  width: 50%;\n}\n.noselect {\n  -webkit-touch-callout: none;\n  /* iOS Safari */\n  -webkit-user-select: none;\n  /* Chrome/Safari/Opera */\n  /* Konqueror */\n  -moz-user-select: none;\n  /* Firefox */\n  -ms-user-select: none;\n  /* Internet Explorer/Edge */\n  user-select: none;\n  /* Non-prefixed version, currently\n                                  not supported by any browser */\n}\n.hover-shadow:hover {\n  -webkit-box-shadow: 0px 0px 4px 2px rgba(0, 0, 0, 0.16);\n          box-shadow: 0px 0px 4px 2px rgba(0, 0, 0, 0.16);\n}\n.marker-transparent {\n  opacity: 0.4;\n}\n.marker-fade {\n  -webkit-filter: contrast(16%) brightness(160%) blur(0.6px);\n          filter: contrast(16%) brightness(160%) blur(0.6px);\n}\n.tooltip-warning {\n  background: #e04745;\n  color: #fff;\n}\n.tooltip-warning-arrow {\n  border-right-color: #e04745 !important;\n}\n.tooltip-info {\n  background: #5496F8;\n  color: #fff;\n}\n.tooltip-info-arrow {\n  border-right-color: #5496F8 !important;\n}\na {\n  color: inherit;\n  text-decoration: none;\n}\na:hover {\n  color: inherit;\n  text-decoration: none;\n}\na:active {\n  color: inherit;\n  text-decoration: none;\n}\na:focus {\n  outline: none;\n  color: inherit;\n  text-decoration: none;\n}\n.spinner-wave {\n  margin: 0 auto;\n  width: 100px;\n  height: 20px;\n  text-align: center;\n}\n.spinner-wave > div {\n  background-color: #5496F8;\n  height: 100%;\n  width: 6px;\n  display: inline-block;\n  -webkit-animation: wave 1.2s infinite ease-in-out;\n  animation: wave 1.2s infinite ease-in-out;\n}\n.spinner-wave div:nth-child(2) {\n  -webkit-animation-delay: -1.1s;\n  animation-delay: -1.1s;\n}\n.spinner-wave div:nth-child(3) {\n  -webkit-animation-delay: -1s;\n  animation-delay: -1s;\n}\n.spinner-wave div:nth-child(4) {\n  -webkit-animation-delay: -0.9s;\n  animation-delay: -0.9s;\n}\n.spinner-wave div:nth-child(5) {\n  -webkit-animation-delay: -0.8s;\n  animation-delay: -0.8s;\n}\n@-webkit-keyframes wave {\n  0%,\n  40%,\n  100% {\n    -webkit-transform: scaleY(0.4);\n  }\n  20% {\n    -webkit-transform: scaleY(1);\n  }\n}\n@keyframes wave {\n  0%,\n  40%,\n  100% {\n    -webkit-transform: scaleY(0.4);\n            transform: scaleY(0.4);\n  }\n  20% {\n    -webkit-transform: scaleY(1);\n            transform: scaleY(1);\n  }\n}\n@media screen and (max-width: 480px) {\n  .hide-xs {\n    display: none !important;\n  }\n}\n@media screen and (min-width: 480px) {\n  .show-xs {\n    display: none !important;\n  }\n}\n.ht-btn {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  padding: 5px 13px;\n  border: 0;\n  background: #ffffff;\n  color: #52616A;\n  -webkit-box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\n          box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\n}\n.ht-btn:focus {\n  background: #fcfcfc;\n  outline: 0;\n}\n.ht-btn-card:hover {\n  background: #5496F8;\n  color: rgba(255, 255, 255, 0.96);\n  -webkit-box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\n          box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\n}\n.stopped-color {\n  color: #FFBB44;\n}\n.drive-color {\n  color: #5496F8;\n}\n.walk-color {\n  color: #5496F8;\n}\n.moving-color {\n  color: #5496F8;\n}\n.logged_off-color {\n  color: #A9BAC4;\n}\n.network_offline-color {\n  color: #d19191;\n}\n.location_disabled-color {\n  color: #d19191;\n}\n.location_low_accuracy-color {\n  color: #d19191;\n}\n.stopped-bg {\n  background: #FFBB44;\n}\n.drive-bg {\n  background: #5496F8;\n}\n.walk-bg {\n  background: #5496F8;\n}\n.moving-bg {\n  background: #5496F8;\n}\n.logged_off-bg {\n  background: #A9BAC4;\n}\n.network_offline-bg {\n  background: #d19191;\n}\n.location_disabled-bg {\n  background-color: #d19191;\n}\n.location_low_accuracy-bg {\n  background-color: #d19191;\n}\n`],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BatteryIconComponent implements OnInit {\n  @Input() battery: number = 0;\n  @Input() layout: 'column' | 'row' = 'row';\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  batteryClass(level: number) {\n    let className = '';\n    if (level > 90) {\n      className = 'fa-battery-4';\n    } else if (level > 70) {\n      className = 'fa-battery-3';\n    } else if (level > 25) {\n      className = 'fa-battery-2';\n    } else if (level > 5) {\n      className = 'fa-battery-1 text-red';\n    } else {\n      className = 'fa-battery-0 text-red';\n    };\n    return className;\n  }\n\n}\n",
    "import { Pipe, PipeTransform } from '@angular/core';\nimport {TimeString} from \"ht-utility\";\n\n@Pipe({\n  name: 'timeString'\n})\nexport class TimeStringPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    return TimeString(value, args);\n  }\n\n}\n",
    "import { Pipe, PipeTransform } from '@angular/core';\nimport {htAction} from \"ht-data\";\nimport {DateString} from \"ht-utility\";\n\n@Pipe({\n  name: 'dateString'\n})\nexport class DateStringPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    return DateString(value, args);\n  }\n\n}\n",
    "import { Pipe, PipeTransform } from '@angular/core';\nimport {NameCase} from \"ht-utility\";\n\n@Pipe({\n  name: 'nameCase'\n})\nexport class NameCasePipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    return NameCase(value);\n  }\n\n}\n",
    "import {Component, OnInit, Input, ChangeDetectionStrategy} from '@angular/core';\n\n@Component({\n  selector: 'ht-loading-dots',\n  template: `<ng-content></ng-content>\n<span [style.fontSize.px]=\"size || 'inherit'\" class=\"loading-dots\"><span> &bull;</span><span> &bull;</span><span> &bull;</span></span>\n`,\n  styles: [`.loading-dots {\n  font-size: inherit;\n  margin: auto;\n}\n.loading-dots span {\n  -webkit-animation-name: blink;\n          animation-name: blink;\n  -webkit-animation-duration: 1.4s;\n          animation-duration: 1.4s;\n  -webkit-animation-iteration-count: infinite;\n          animation-iteration-count: infinite;\n  -webkit-animation-fill-mode: both;\n          animation-fill-mode: both;\n}\n.loading-dots span:nth-child(2) {\n  -webkit-animation-delay: .2s;\n          animation-delay: .2s;\n}\n.loading-dots span:nth-child(3) {\n  -webkit-animation-delay: .4s;\n          animation-delay: .4s;\n}\n@-webkit-keyframes blink {\n  0% {\n    opacity: .2;\n  }\n  20% {\n    opacity: 1;\n  }\n  100% {\n    opacity: .2;\n  }\n}\n@keyframes blink {\n  0% {\n    opacity: .2;\n  }\n  20% {\n    opacity: 1;\n  }\n  100% {\n    opacity: .2;\n  }\n}\n`],\n  changeDetection: ChangeDetectionStrategy.OnPush\n\n})\nexport class LoadingDotsComponent implements OnInit {\n  @Input() show = true;\n  @Input() size: number;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n",
    "import { Pipe, PipeTransform } from '@angular/core';\nimport {DotString} from \"ht-utility\";\n\n@Pipe({\n  name: 'dot'\n})\nexport class DotPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    return DotString(value, args);\n  }\n\n}\n",
    "import {Component, OnInit, Input, ChangeDetectionStrategy} from '@angular/core';\n\n@Component({\n  selector: 'ht-loading-data',\n  template: `<div [style.fontSize.px]=\"size || 'inherit'\" loading-dots><span>{{customMessage || message}}</span></div>\n`,\n  styles: [`:host {\n  color: #798E9B;\n  text-align: center;\n}\n`],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LoadingDataComponent implements OnInit {\n  @Input() size: number;\n  @Input() message: string = \"\";\n  @Input() customMessage: string;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n",
    "import { Pipe, PipeTransform } from '@angular/core';\nimport {DateHumanize} from \"ht-utility\";\n\n@Pipe({\n  name: 'dateHumanize'\n})\nexport class DateHumanizePipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    return DateHumanize(value);\n  }\n\n}\n",
    "import { Pipe, PipeTransform } from '@angular/core';\nimport {HMString} from \"ht-utility\";\n\n@Pipe({\n  name: 'hmString'\n})\nexport class HmStringPipe implements PipeTransform {\n\n  transform(value: any, args?: any, args2?: true): any {\n    return HMString(value, args);\n  }\n\n}\n",
    "import { Pipe, PipeTransform } from '@angular/core';\nimport {DistanceLocale} from \"ht-utility\";\n\n@Pipe({\n  name: 'distanceLocale'\n})\nexport class DistanceLocalePipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    return DistanceLocale(value);\n  }\n\n}\n",
    "import { Pipe, PipeTransform } from '@angular/core';\n// import {GetUserStatusString} from \"ht-js-data\";\n\n@Pipe({\n  name: 'usersStatusString'\n})\nexport class UsersStatusStringPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    if (status.split(',').length === 4) return 'Fit to map';\n    // return GetUserStatusString(value)\n  }\n\n}\n",
    "import {Pipe, PipeTransform} from \"@angular/core\";\nimport {htAction} from \"ht-data\";\n\n\n@Pipe({\n  name: 'actionStatusString'\n})\nexport class ActionStatusStringPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    return htAction().getFilterString(value);\n  }\n\n}\n",
    "import { Pipe, PipeTransform } from '@angular/core';\n// import {GetUserSortingString} from \"ht-data\";\n\n@Pipe({\n  name: 'userSortingString'\n})\nexport class UserSortingStringPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    return value\n    // return GetUserSortingString(value);\n  }\n\n}\n",
    "import {Pipe, PipeTransform} from '@angular/core';\nimport {htAction} from \"ht-data\";\n\n@Pipe({\n  name: 'actionSortingString'\n})\nexport class ActionSortingStringPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    return htAction().getSortingString(value);\n  }\n\n}\n",
    "import { Pipe, PipeTransform } from '@angular/core';\n// import {DomSanitizer} from \"@angular/platform-browser\";\n\n@Pipe({name: 'safeUrl'})\nexport class SafeUrlPipe implements PipeTransform {\n\n  constructor() {}\n\n  transform(value: string, args?: any): any {\n    // return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n  }\n\n}\n",
    "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'pluralize'\n})\nexport class PluralizePipe implements PipeTransform {\n\n  transform(value: string, args: number, suffix: string = 's', singularSuffix: string = ''): any {\n    if (args && typeof args === 'number') {\n      return args > 1 ? value + suffix : value + singularSuffix;\n    }\n    return value;\n  }\n\n}\n",
    "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ht-button',\n  template: `<p>\n  button works!\n</p>\n`,\n  styles: [``]\n})\nexport class ButtonComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n",
    "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ht-loading-bar',\n  template: `<div class=\"relative\">\n  <div class=\"load-bar\">\n    <div class=\"bar\"></div>\n    <div class=\"bar\"></div>\n    <div class=\"bar\"></div>\n  </div>\n</div>\n\n\n`,\n  styles: [`.text-center {\n  text-align: center;\n}\n.text-muted {\n  color: #798E9B;\n}\n.text-right {\n  text-align: right;\n}\n.text-left {\n  text-align: left;\n}\n.text-1 {\n  font-size: 2em;\n}\n.text-4 {\n  font-size: 0.8em;\n}\n.text-capitalize {\n  text-transform: capitalize;\n}\n.text-uppercase {\n  text-transform: uppercase;\n}\n.text-ontime {\n  color: #58ae5b;\n}\n.text-late {\n  color: #E6413E;\n}\n.text-warning {\n  color: #E6413E !important;\n}\n.text-red {\n  color: #E6413E;\n}\n.text-blue {\n  color: #5496F8;\n}\n.truncate {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n.flex-row {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: row;\n          flex-direction: row;\n}\n.flex-column {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: column;\n          flex-direction: column;\n}\n.column-gap-4 > :not(:last-child) {\n  margin-bottom: 4px;\n}\n.row-gap-4 > :not(:last-child) {\n  margin-right: 4px;\n}\n.column-gap-7 > :not(:last-child) {\n  margin-bottom: 7px;\n}\n.row-gap-7 > :not(:last-child) {\n  margin-right: 7px;\n}\n.column-gap-10 > :not(:last-child) {\n  margin-bottom: 10px;\n}\n.row-gap-10 > :not(:last-child) {\n  margin-right: 10px;\n}\n.column-gap-20 > :not(:last-child) {\n  margin-bottom: 20px;\n}\n.row-gap-20 > :not(:last-child) {\n  margin-right: 20px;\n}\n.wrap {\n  -ms-flex-wrap: wrap;\n      flex-wrap: wrap;\n}\n.flex {\n  -webkit-box-flex: 1;\n      -ms-flex: 1;\n          flex: 1;\n}\n.auto {\n  margin: auto;\n}\n.relative {\n  position: relative;\n}\n.space-between {\n  -webkit-box-pack: justify;\n      -ms-flex-pack: justify;\n          justify-content: space-between;\n}\n.space-around {\n  -ms-flex-pack: distribute;\n      justify-content: space-around;\n}\n.justify-center {\n  -webkit-box-pack: center;\n      -ms-flex-pack: center;\n          justify-content: center;\n}\n.flex-center {\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n}\n.align-center {\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n}\n.clickable {\n  cursor: pointer;\n}\n.round-icon {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  width: 23px;\n  height: 23px;\n  background: #315790;\n  border-radius: 50%;\n}\n.flex-half {\n  -ms-flex-preferred-size: 50%;\n      flex-basis: 50%;\n}\n.link-unstyled {\n  color: inherit;\n}\n.link-unstyled:hover {\n  text-decoration: none;\n}\n.half {\n  width: 50%;\n}\n.noselect {\n  -webkit-touch-callout: none;\n  /* iOS Safari */\n  -webkit-user-select: none;\n  /* Chrome/Safari/Opera */\n  /* Konqueror */\n  -moz-user-select: none;\n  /* Firefox */\n  -ms-user-select: none;\n  /* Internet Explorer/Edge */\n  user-select: none;\n  /* Non-prefixed version, currently\n                                  not supported by any browser */\n}\n.hover-shadow:hover {\n  -webkit-box-shadow: 0px 0px 4px 2px rgba(0, 0, 0, 0.16);\n          box-shadow: 0px 0px 4px 2px rgba(0, 0, 0, 0.16);\n}\n.marker-transparent {\n  opacity: 0.4;\n}\n.marker-fade {\n  -webkit-filter: contrast(16%) brightness(160%) blur(0.6px);\n          filter: contrast(16%) brightness(160%) blur(0.6px);\n}\n.tooltip-warning {\n  background: #e04745;\n  color: #fff;\n}\n.tooltip-warning-arrow {\n  border-right-color: #e04745 !important;\n}\n.tooltip-info {\n  background: #5496F8;\n  color: #fff;\n}\n.tooltip-info-arrow {\n  border-right-color: #5496F8 !important;\n}\na {\n  color: inherit;\n  text-decoration: none;\n}\na:hover {\n  color: inherit;\n  text-decoration: none;\n}\na:active {\n  color: inherit;\n  text-decoration: none;\n}\na:focus {\n  outline: none;\n  color: inherit;\n  text-decoration: none;\n}\n.spinner-wave {\n  margin: 0 auto;\n  width: 100px;\n  height: 20px;\n  text-align: center;\n}\n.spinner-wave > div {\n  background-color: #5496F8;\n  height: 100%;\n  width: 6px;\n  display: inline-block;\n  -webkit-animation: wave 1.2s infinite ease-in-out;\n  animation: wave 1.2s infinite ease-in-out;\n}\n.spinner-wave div:nth-child(2) {\n  -webkit-animation-delay: -1.1s;\n  animation-delay: -1.1s;\n}\n.spinner-wave div:nth-child(3) {\n  -webkit-animation-delay: -1s;\n  animation-delay: -1s;\n}\n.spinner-wave div:nth-child(4) {\n  -webkit-animation-delay: -0.9s;\n  animation-delay: -0.9s;\n}\n.spinner-wave div:nth-child(5) {\n  -webkit-animation-delay: -0.8s;\n  animation-delay: -0.8s;\n}\n@-webkit-keyframes wave {\n  0%,\n  40%,\n  100% {\n    -webkit-transform: scaleY(0.4);\n  }\n  20% {\n    -webkit-transform: scaleY(1);\n  }\n}\n@keyframes wave {\n  0%,\n  40%,\n  100% {\n    -webkit-transform: scaleY(0.4);\n            transform: scaleY(0.4);\n  }\n  20% {\n    -webkit-transform: scaleY(1);\n            transform: scaleY(1);\n  }\n}\n@media screen and (max-width: 480px) {\n  .hide-xs {\n    display: none !important;\n  }\n}\n@media screen and (min-width: 480px) {\n  .show-xs {\n    display: none !important;\n  }\n}\n.ht-btn {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  padding: 5px 13px;\n  border: 0;\n  background: #ffffff;\n  color: #52616A;\n  -webkit-box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\n          box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\n}\n.ht-btn:focus {\n  background: #fcfcfc;\n  outline: 0;\n}\n.ht-btn-card:hover {\n  background: #5496F8;\n  color: rgba(255, 255, 255, 0.96);\n  -webkit-box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\n          box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\n}\n.stopped-color {\n  color: #FFBB44;\n}\n.drive-color {\n  color: #5496F8;\n}\n.walk-color {\n  color: #5496F8;\n}\n.moving-color {\n  color: #5496F8;\n}\n.logged_off-color {\n  color: #A9BAC4;\n}\n.network_offline-color {\n  color: #d19191;\n}\n.location_disabled-color {\n  color: #d19191;\n}\n.location_low_accuracy-color {\n  color: #d19191;\n}\n.stopped-bg {\n  background: #FFBB44;\n}\n.drive-bg {\n  background: #5496F8;\n}\n.walk-bg {\n  background: #5496F8;\n}\n.moving-bg {\n  background: #5496F8;\n}\n.logged_off-bg {\n  background: #A9BAC4;\n}\n.network_offline-bg {\n  background: #d19191;\n}\n.location_disabled-bg {\n  background-color: #d19191;\n}\n.location_low_accuracy-bg {\n  background-color: #d19191;\n}\n.load-bar {\n  position: absolute;\n  width: 100%;\n  height: 3px;\n  top: 0;\n  background-color: #fdba2c;\n  z-index: 10000;\n}\n.bar {\n  content: \"\";\n  display: inline;\n  position: absolute;\n  width: 0;\n  height: 100%;\n  left: 50%;\n  text-align: center;\n}\n.bar:nth-child(1) {\n  background-color: #da4733;\n  -webkit-animation: loading 3s linear infinite;\n          animation: loading 3s linear infinite;\n}\n.bar:nth-child(2) {\n  background-color: #3b78e7;\n  -webkit-animation: loading 3s linear 1s infinite;\n          animation: loading 3s linear 1s infinite;\n}\n.bar:nth-child(3) {\n  background-color: #fdba2c;\n  -webkit-animation: loading 3s linear 2s infinite;\n          animation: loading 3s linear 2s infinite;\n}\n@-webkit-keyframes loading {\n  from {\n    left: 50%;\n    width: 0;\n    z-index: 100;\n  }\n  33.3333% {\n    left: 0;\n    width: 100%;\n    z-index: 10;\n  }\n  to {\n    left: 0;\n    width: 100%;\n  }\n}\n@keyframes loading {\n  from {\n    left: 50%;\n    width: 0;\n    z-index: 100;\n  }\n  33.3333% {\n    left: 0;\n    width: 100%;\n    z-index: 10;\n  }\n  to {\n    left: 0;\n    width: 100%;\n  }\n}\n`]\n})\nexport class LoadingBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n",
    "import {Directive, Input, HostListener, HostBinding} from '@angular/core';\n\n@Directive({\n  selector: '[htDropdown]'\n})\nexport class DropdownDirective {\n\n  @HostBinding('class.is-active') show: boolean = false;\n  @Input() appDropdown: 'onHover' | 'onClick' = 'onHover';\n  @Input() hover: boolean;\n\n  @HostListener('mouseenter', ['$event'])\n  onMouseEnter(event) {\n    if (!this.appDropdown || this.appDropdown === 'onHover') {\n      this.show = true;\n    }\n\n  }\n\n  @HostListener('mouseleave', ['$event'])\n  onMouseLeave(event) {\n    if (!this.appDropdown || this.appDropdown === 'onHover') {\n      this.show = false;\n    }\n  }\n  @HostListener('click', ['$event'])\n  onClick(event) {\n    if (this.appDropdown == 'onClick') {\n      this.show = !this.show;\n    }\n\n  }\n\n  // @HostListener('window:click', ['$event'])\n  // onClick(event) {\n  //   if(event.target.id != 'accounts') {\n  //     this.showAccountDropDown = false;\n  //   }\n  // }\n  //\n  // @HostListener('window:click', ['$event'])\n  // onClick(event) {\n  //   if(event.target.id != 'accounts') {\n  //     this.showAccountDropDown = false;\n  //   }\n  // }\n  constructor() {\n\n  }\n\n  ngOnInit() {\n\n  }\n\n}\n",
    "import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ProfileComponent} from './profile/profile.component';\nimport {RouterModule} from \"@angular/router\";\nimport {BatteryIconComponent} from './battery-icon/battery-icon.component';\nimport {TimeStringPipe} from \"../pipes/time-string.pipe\";\nimport {DateStringPipe} from \"../pipes/date-string.pipe\";\nimport {NameCasePipe} from \"../pipes/name-case.pipe\";\nimport {DotPipe} from \"../pipes/dot.pipe\";\nimport {LoadingDotsComponent} from './loading-dots/loading-dots.component';\nimport {LoadingDataComponent} from './loading-data/loading-data.component';\nimport {DateHumanizePipe} from \"../pipes/date-humanize.pipe\";\nimport {DistanceLocalePipe} from './../pipes/distance-locale.pipe';\nimport {HmStringPipe} from './../pipes/hm-string.pipe';\nimport {UsersStatusStringPipe} from './../pipes/users-status-string.pipe';\nimport {ActionStatusStringPipe} from './../pipes/action-status-string.pipe';\nimport {UserSortingStringPipe} from '../pipes/user-sorting-string.pipe';\nimport {ActionSortingStringPipe} from '../pipes/action-sorting-string.pipe';\nimport {SafeUrlPipe} from \"../pipes/safe-url.pipe\";\nimport { PluralizePipe } from '../pipes/pluralize.pipe';\nimport { ButtonComponent } from './button/button.component';\nimport { LoadingBarComponent } from './loading-bar/loading-bar.component';\nimport { DropdownDirective } from './dropdown/dropdown.directive';\n\n@NgModule({\n  imports: [\n    CommonModule,\n      RouterModule\n  ],\n  declarations: [\n    ProfileComponent,\n    BatteryIconComponent,\n    DateStringPipe,\n    TimeStringPipe,\n    DotPipe,\n    NameCasePipe,\n    LoadingDotsComponent,\n    LoadingDataComponent,\n    DateHumanizePipe,\n      DistanceLocalePipe,\n      HmStringPipe,\n    UsersStatusStringPipe,\n    ActionStatusStringPipe,\n    SafeUrlPipe,\n    UserSortingStringPipe,\n    ActionSortingStringPipe,\n    PluralizePipe,\n    ButtonComponent,\n    LoadingBarComponent,\n    DropdownDirective,\n  ],\n  exports: [\n    ProfileComponent,\n    BatteryIconComponent,\n    DateStringPipe,\n    TimeStringPipe,\n    DotPipe,\n    NameCasePipe,\n    LoadingDotsComponent,\n    LoadingDataComponent,\n    DateHumanizePipe,\n    DistanceLocalePipe,\n    HmStringPipe,\n    UsersStatusStringPipe,\n    ActionStatusStringPipe,\n    SafeUrlPipe,\n    UserSortingStringPipe,\n    ActionSortingStringPipe,\n    PluralizePipe,\n    LoadingBarComponent,\n    DropdownDirective,\n  ]\n})\nexport class SharedModule { }\n",
    "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UserCardComponent } from './user-card.component';\nimport {SharedModule} from \"../shared/shared.module\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule\n  ],\n  declarations: [UserCardComponent],\n  exports: [UserCardComponent]\n})\nexport class UserCardModule { }\n",
    "import {ChangeDetectionStrategy, Component, EventEmitter, Input, OnDestroy, OnInit, Output} from '@angular/core';\nimport {IUserAnalytics, IUserAnalyticsPage} from \"ht-models\";\n// import {entryLeaveTransition} from \"../../animations/appear\";\n// import {anim} from \"../../animations/appear\";\nimport {animate, keyframes, query, stagger, state, style, transition, trigger} from \"@angular/animations\";\nimport {Observable} from \"rxjs/Observable\";\n\n@Component({\n  selector: 'ht-users',\n  template: `<div class=\"card-stack\" *ngIf=\"users\" [@cardStack]=\"users.length\">\n  <ht-user-card\n    [@sort]=\"i\"\n    class=\"flex-row card card-clickable is-marginless\"\n    [class.card-selected]=\"selectedUserDataId == user.id\"\n    (mouseenter)=\"hover(user.id)\"\n    (mouseleave)=\"hover(null)\"\n    (click)=\"selectUser(user)\"\n    [user]=\"user\" *ngFor=\"let user of users; let i = index; trackBy:indexId\">\n    <div *ngIf=\"selectedUserId\" class=\"card-content-mid card-action flex-row align-center\" (click)=\"onAction.next({event: $event, action: 'close'})\">\n      <a class=\"delete is-medium\"></a>\n    </div>\n    <ht-loading-dots\n      *ngIf=\"user.id === loadingUserDataId && !selectedUserId\" class=\"card-content-mid text-1 card-action flex-row align-center\">\n    </ht-loading-dots>\n  </ht-user-card>\n</div>\n`,\n  styles: [`.card-action-clicked {\n  color: white;\n}\n.card-action {\n  font-size: 1.3em;\n  font-weight: bold;\n  min-width: 46px;\n}\n.card-action.clickable:hover {\n  background: #e6e6e6;\n}\n`],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('card', [\n      transition(':enter', [\n        style({transform: 'translateX(-100px)', height: 0, opacity: 0}),\n        animate('0.3s' + ' ease-out')\n      ]),\n      transition(':leave', [\n        style({transform: 'translateX(0px)', height: '*', opacity: 1}),\n        animate('0.3s' + ' ease-in', style({transform: 'translateX(-100px)', height: 0, opacity: 0}))\n      ])\n      ]\n    ),\n    trigger('image', [\n      // transition(':enter', [\n      //   query(':self', [\n      //     style({ transform: 'translateX(-200px)', opacity: 0, height: 0 }),\n      //     stagger(100, [\n      //       animate('1200ms cubic-bezier(0.35, 0, 0.25, 1)', style('*'))\n      //     ])\n      //   ])\n      // ]),\n      // transition(':leave', [\n      //   query(':self', [\n      //\n      //     stagger(100, [\n      //       animate('1200ms cubic-bezier(0.35, 0, 0.25, 1)', style({ transform: 'translateX(-200px)', opacity: 0, height: 0 }))\n      //     ])\n      //   ])\n      // ]),\n    ]\n    ),\n    trigger('sort', [\n      transition('* => *',\n        animate(500, keyframes([\n          style('*'),\n          style({ opacity: 0.1}),\n          style('*'),\n        ]))\n      ),\n      // transition(':decrement',\n      //   animate(500, keyframes([\n      //     style('*'),\n      //     style({ opacity: 0.1, transform: 'translateX(-50px)'}),\n      //     style('*'),\n      //   ]))\n      // ),\n    ]),\n    trigger('cardStack', [\n      transition('* => *', [\n        query('.card:enter', [\n          style({transform: 'translateX(-100px)', height: 0, opacity: 0}),\n          animate('0.3s' + ' ease-out')\n        ], {optional: true}),\n        query('.card:leave', [\n          style({transform: 'translateX(0px)', height: '*', opacity: 1}),\n          animate('0.3s' + ' ease-in', style({transform: 'translateX(-100px)', height: 0, opacity: 0}))\n        ], {optional: true})\n      ])\n    ])\n  ]\n})\nexport class UsersComponent implements OnInit, OnDestroy {\n  // userCardAction;\n  @Input() users: IUserAnalytics[];\n  @Input() selectedUserId: string | null;\n  @Input() selectedUserDataId: string | null;\n  @Input() loadingUserDataId: string | null;\n  @Input() hasMap: boolean = false;\n  @Input() showExtraBtn: boolean = true;\n  @Output() onSelectUser: EventEmitter<string | null> = new EventEmitter();\n  @Output() onAction: EventEmitter<string | null> = new EventEmitter();\n  @Output() onHover: EventEmitter<string | null> = new EventEmitter();\n  constructor() { }\n\n  ngOnInit() {\n\n  }\n\n\n\n  getAction(user) {\n    // console.log(\"action\", this.loadingUserDataId, this.loadingUserId);\n    const id = user.id;\n    if (!this.hasMap) return 'detail';\n\n    if (this.selectedUserId === user.id) {\n      return \"close\"\n    } else if (id === this.loadingUserDataId && (!this.selectedUserId || !user.segments) ) {\n      return 'loading'\n    } else if (this.selectedUserDataId === user.id) {\n      return 'detail';\n    }  else {\n      return \"default\"\n    }\n  }\n\n  indexId(index, item) {\n    return item.id\n  }\n\n  selectUser(user) {\n    this.onSelectUser.next(user)\n  }\n\n  hover(id: string | null) {\n    this.onHover.next(id)\n  }\n\n  ngOnDestroy() {\n\n  }\n\n}\n",
    "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UsersComponent } from './users.component';\nimport {SharedModule} from \"../shared/shared.module\";\nimport {UserCardModule} from \"../user-card/user-card.module\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    UserCardModule\n  ],\n  declarations: [UsersComponent],\n  exports: [UsersComponent]\n})\nexport class UsersModule { }\n",
    "import {HtUsersClient} from \"ht-client\";\n\nexport class HtUsersService extends HtUsersClient {\n\n  // constructor() { }\n\n}\n",
    "import {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {IUserAnalytics, IUserData, Page} from \"ht-models\";\nimport {Observable} from \"rxjs/Observable\";\nimport {ApiType, QueryLabel} from \"ht-client\";\nimport {listwithSelectedId$, listWithItem$} from \"ht-data\";\nimport {HtMapService} from \"../ht/ht-map.service\";\nimport {HtUsersService} from \"../ht/ht-users.service\";\nimport {Color} from \"ht-utility\";\nimport {distinctUntilChanged, map} from \"rxjs/operators\";\n\n@Component({\n  selector: 'ht-users-container',\n  template: `<div class=\"flex-column relative\">\n  <ng-container *ngIf=\"showSummary$ | async\">\n    <ht-users-summary-container *ngIf=\"showStatusSummary\" [selectable]=\"true\"></ht-users-summary-container>\n    <ht-users-summary-container *ngIf=\"showActiveSummary\" [selectable]=\"true\" [hideTotal]=\"true\" [queryLabels]=\"queryMap\"></ht-users-summary-container>\n  </ng-container>\n\n  <ht-users\n    [selectedUserDataId]=\"selectedUserDataId$ | async\"\n    [selectedUserId]=\"selectedUserId$ | async\"\n    [loadingUserDataId]=\"loadingUserDataId$ | async\"\n    [hasMap]=\"hasMap\"\n    (onHover)=\"hoverUser($event)\"\n    (onAction)=\"onAction($event)\"\n    (onSelectUser)=\"selectUserCard($event)\"\n    [showExtraBtn]=\"hasPlaceline\"\n    [users]=\"users$ | async\"></ht-users>\n  <ht-placeline-container [showUserCard]=\"false\" *ngIf=\"(selectedUserId$ | async)\"></ht-placeline-container>\n  <!--<div *ngIf=\"(selectedUserId$ | async) && user$ | async as userData\">-->\n    <!--&lt;!&ndash;<ht-user-card [user]=\"userData\"></ht-user-card>&ndash;&gt;-->\n    <!--<ht-placeline [userData]=\"userData\"></ht-placeline>-->\n  <!--</div>-->\n  <div class=\"loading-box\" *ngIf=\"loadingUsers$ | async\"></div>\n  <ng-container *ngIf=\"usersPage$ | async as usersPage\">\n    <ht-pagination (fetchPage)=\"fetchPage($event)\" [pageDate]=\"usersPage\"></ht-pagination>\n  </ng-container>\n\n</div>\n`,\n  styles: [`.text-center {\n  text-align: center;\n}\n.text-muted {\n  color: #798E9B;\n}\n.text-right {\n  text-align: right;\n}\n.text-left {\n  text-align: left;\n}\n.text-1 {\n  font-size: 2em;\n}\n.text-4 {\n  font-size: 0.8em;\n}\n.text-capitalize {\n  text-transform: capitalize;\n}\n.text-uppercase {\n  text-transform: uppercase;\n}\n.text-ontime {\n  color: #58ae5b;\n}\n.text-late {\n  color: #E6413E;\n}\n.text-warning {\n  color: #E6413E !important;\n}\n.text-red {\n  color: #E6413E;\n}\n.text-blue {\n  color: #5496F8;\n}\n.truncate {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n.flex-row {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: row;\n          flex-direction: row;\n}\n.flex-column {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: column;\n          flex-direction: column;\n}\n.column-gap-4 > :not(:last-child) {\n  margin-bottom: 4px;\n}\n.row-gap-4 > :not(:last-child) {\n  margin-right: 4px;\n}\n.column-gap-7 > :not(:last-child) {\n  margin-bottom: 7px;\n}\n.row-gap-7 > :not(:last-child) {\n  margin-right: 7px;\n}\n.column-gap-10 > :not(:last-child) {\n  margin-bottom: 10px;\n}\n.row-gap-10 > :not(:last-child) {\n  margin-right: 10px;\n}\n.column-gap-20 > :not(:last-child) {\n  margin-bottom: 20px;\n}\n.row-gap-20 > :not(:last-child) {\n  margin-right: 20px;\n}\n.wrap {\n  -ms-flex-wrap: wrap;\n      flex-wrap: wrap;\n}\n.flex {\n  -webkit-box-flex: 1;\n      -ms-flex: 1;\n          flex: 1;\n}\n.auto {\n  margin: auto;\n}\n.relative {\n  position: relative;\n}\n.space-between {\n  -webkit-box-pack: justify;\n      -ms-flex-pack: justify;\n          justify-content: space-between;\n}\n.space-around {\n  -ms-flex-pack: distribute;\n      justify-content: space-around;\n}\n.justify-center {\n  -webkit-box-pack: center;\n      -ms-flex-pack: center;\n          justify-content: center;\n}\n.flex-center {\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n}\n.align-center {\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n}\n.clickable {\n  cursor: pointer;\n}\n.round-icon {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  width: 23px;\n  height: 23px;\n  background: #315790;\n  border-radius: 50%;\n}\n.flex-half {\n  -ms-flex-preferred-size: 50%;\n      flex-basis: 50%;\n}\n.link-unstyled {\n  color: inherit;\n}\n.link-unstyled:hover {\n  text-decoration: none;\n}\n.half {\n  width: 50%;\n}\n.noselect {\n  -webkit-touch-callout: none;\n  /* iOS Safari */\n  -webkit-user-select: none;\n  /* Chrome/Safari/Opera */\n  /* Konqueror */\n  -moz-user-select: none;\n  /* Firefox */\n  -ms-user-select: none;\n  /* Internet Explorer/Edge */\n  user-select: none;\n  /* Non-prefixed version, currently\n                                  not supported by any browser */\n}\n.hover-shadow:hover {\n  -webkit-box-shadow: 0px 0px 4px 2px rgba(0, 0, 0, 0.16);\n          box-shadow: 0px 0px 4px 2px rgba(0, 0, 0, 0.16);\n}\n.marker-transparent {\n  opacity: 0.4;\n}\n.marker-fade {\n  -webkit-filter: contrast(16%) brightness(160%) blur(0.6px);\n          filter: contrast(16%) brightness(160%) blur(0.6px);\n}\n.tooltip-warning {\n  background: #e04745;\n  color: #fff;\n}\n.tooltip-warning-arrow {\n  border-right-color: #e04745 !important;\n}\n.tooltip-info {\n  background: #5496F8;\n  color: #fff;\n}\n.tooltip-info-arrow {\n  border-right-color: #5496F8 !important;\n}\na {\n  color: inherit;\n  text-decoration: none;\n}\na:hover {\n  color: inherit;\n  text-decoration: none;\n}\na:active {\n  color: inherit;\n  text-decoration: none;\n}\na:focus {\n  outline: none;\n  color: inherit;\n  text-decoration: none;\n}\n.spinner-wave {\n  margin: 0 auto;\n  width: 100px;\n  height: 20px;\n  text-align: center;\n}\n.spinner-wave > div {\n  background-color: #5496F8;\n  height: 100%;\n  width: 6px;\n  display: inline-block;\n  -webkit-animation: wave 1.2s infinite ease-in-out;\n  animation: wave 1.2s infinite ease-in-out;\n}\n.spinner-wave div:nth-child(2) {\n  -webkit-animation-delay: -1.1s;\n  animation-delay: -1.1s;\n}\n.spinner-wave div:nth-child(3) {\n  -webkit-animation-delay: -1s;\n  animation-delay: -1s;\n}\n.spinner-wave div:nth-child(4) {\n  -webkit-animation-delay: -0.9s;\n  animation-delay: -0.9s;\n}\n.spinner-wave div:nth-child(5) {\n  -webkit-animation-delay: -0.8s;\n  animation-delay: -0.8s;\n}\n@-webkit-keyframes wave {\n  0%,\n  40%,\n  100% {\n    -webkit-transform: scaleY(0.4);\n  }\n  20% {\n    -webkit-transform: scaleY(1);\n  }\n}\n@keyframes wave {\n  0%,\n  40%,\n  100% {\n    -webkit-transform: scaleY(0.4);\n            transform: scaleY(0.4);\n  }\n  20% {\n    -webkit-transform: scaleY(1);\n            transform: scaleY(1);\n  }\n}\n@media screen and (max-width: 480px) {\n  .hide-xs {\n    display: none !important;\n  }\n}\n@media screen and (min-width: 480px) {\n  .show-xs {\n    display: none !important;\n  }\n}\n.ht-btn {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  padding: 5px 13px;\n  border: 0;\n  background: #ffffff;\n  color: #52616A;\n  -webkit-box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\n          box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\n}\n.ht-btn:focus {\n  background: #fcfcfc;\n  outline: 0;\n}\n.ht-btn-card:hover {\n  background: #5496F8;\n  color: rgba(255, 255, 255, 0.96);\n  -webkit-box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\n          box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\n}\n.stopped-color {\n  color: #FFBB44;\n}\n.drive-color {\n  color: #5496F8;\n}\n.walk-color {\n  color: #5496F8;\n}\n.moving-color {\n  color: #5496F8;\n}\n.logged_off-color {\n  color: #A9BAC4;\n}\n.network_offline-color {\n  color: #d19191;\n}\n.location_disabled-color {\n  color: #d19191;\n}\n.location_low_accuracy-color {\n  color: #d19191;\n}\n.stopped-bg {\n  background: #FFBB44;\n}\n.drive-bg {\n  background: #5496F8;\n}\n.walk-bg {\n  background: #5496F8;\n}\n.moving-bg {\n  background: #5496F8;\n}\n.logged_off-bg {\n  background: #A9BAC4;\n}\n.network_offline-bg {\n  background: #d19191;\n}\n.location_disabled-bg {\n  background-color: #d19191;\n}\n.location_low_accuracy-bg {\n  background-color: #d19191;\n}\n.loading-box {\n  position: absolute;\n  background: rgba(255, 255, 255, 0.7);\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  -webkit-transition: background 0.5s;\n  transition: background 0.5s;\n  pointer-events: none;\n}\n.loading-box-active {\n  background: rgba(255, 255, 255, 0.7);\n}\n`]\n})\nexport class UsersContainerComponent implements OnInit, OnDestroy {\n  @Input() hasPlaceline = true;\n  usersPage$;\n  users$;\n  user$;\n  selectedUserId$;\n  showSummary$;\n  selectedUserDataId$;\n  loadingUserId$;\n  loadingUserDataId$;\n  loadingUsers$;\n  @Input() hasMap: boolean = false;\n  @Input() showStatusSummary: boolean = true;\n  @Input() showActiveSummary: boolean = true;\n  @Input() apiType: ApiType = ApiType.analytics;\n  @Input() showAll: boolean = false;\n  _queryMap: QueryLabel[] = [\n    {\n      label: 'Logged in',\n      values: ['stopped', 'on_trip', 'network_offline'],\n      color: Color.blue\n    },\n    {\n      label: 'Logged off',\n      values: ['logged_off'],\n      color: '#a8a8a8',\n    },\n    {\n      label: 'Location disabled',\n      values: ['location_disabled'],\n      color: Color.red\n    },\n  ];\n  constructor(\n    private userService: HtUsersService,\n    private mapService: HtMapService\n  ) { }\n\n  ngOnInit() {\n    this.userService.list.setActive();\n    if (this.hasPlaceline) {\n      const selectedUser$ = listwithSelectedId$(\n        this.userService.list.data$,\n        this.userService.list.id$\n      );\n      this.user$ = this.userService.placeline.data$;\n      this.usersPage$ = listWithItem$(\n        selectedUser$,\n        this.user$\n      );\n      this.mapService.usersCluster.onClick = (entity) => {\n        this.selectUserCard(entity.data);\n      };\n\n    } else {\n      this.usersPage$ = this.userService.list.data$;\n    }\n\n    this.users$ = this.usersPage$.pipe(\n      map((pageData: Page<any>) => {\n        return pageData ? pageData.results : pageData\n      })\n    );\n\n    this.loadingUsers$ = this.userService.getLoading$();\n\n    this.loadingUserDataId$ = this.userService.placeline.loading$\n      .pipe(\n        map(data => !!data),\n        distinctUntilChanged()\n      );\n\n    this.selectedUserDataId$ = this.userService.placeline.id$;\n    this.selectedUserId$ = this.userService.list.id$;\n\n    this.showSummary$ = this.selectedUserId$.pipe(\n      map(id => {\n        return id ? false : true\n      }),\n      distinctUntilChanged(),\n      // startWith(true)\n    )\n  }\n\n  get queryMap() {\n    const showAllLabel = this.userService.filterClass.showAllQueryArray;\n    return this.showAll ? [...this._queryMap, ...showAllLabel] : this._queryMap;\n  }\n\n  clear() {\n    this.mapService.segmentTrace.trace(null)\n  }\n\n  selectUserMarker(user) {\n    this.mapService.usersCluster.highlight(user)\n  }\n\n  onAction(payload) {\n    // console.log(payload, payload['action']);\n    switch (payload['action']) {\n      case \"close\":\n        this.closeUser(payload.event);\n        break;\n      case \"detail\": {\n        this.selectUserCard(payload.user);\n        // this.selectUserMarker(payload.user);\n        // this.selectUser(payload.user);\n        break;\n      }\n      case \"default\": {\n        this.selectUserCardAction(payload.user, payload.event);\n        // this.selectUserData(payload.user, payload.event);\n        break\n      }\n      default: {\n\n      }\n\n    }\n  };\n\n  selectUserCard(user) {\n    if (this.hasPlaceline) {\n      this.selectUser(user)\n    } else {\n      this.selectUserMarker(user)\n    }\n\n  }\n\n  selectUserCardAction(user, event) {\n    if (this.hasPlaceline) {\n      this.selectUserData(user, event);\n    } else {\n      this.selectUserMarker(user);\n    }\n  }\n\n  closeUser(event) {\n    event.stopPropagation();\n    this.userService.list.setId(null);\n    this.userService.placeline.setId(null)\n  }\n\n\n  selectUser(user) {\n    const id = user.id;\n    this.userService.list.toggleId(id);\n    this.userService.placeline.toggleId(id);\n    // this.userService.placeline.setId(id);\n\n  };\n\n  selectUserData(userData: IUserData, event) {\n    const id = userData.id;\n    event.stopPropagation();\n    this.userService.placeline.toggleId(id);\n  }\n\n  fetchPage(number) {\n    this.userService.list.addQuery({page: number})\n  }\n\n  hoverUser(userId: string | null) {\n    this.mapService.usersCluster.setPopup(userId)\n  }\n\n  closeHoverUser() {\n    this.hoverUser(null)\n  }\n\n  ngOnDestroy() {\n    this.userService.list.clearData();\n    this.userService.list.setId(null)\n  }\n\n}\n",
    "import {\n  ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, OnInit,\n  Output\n} from '@angular/core';\nimport {IAction, ISegment, IUserData} from \"ht-models\";\nimport {NameCase} from \"ht-utility\";\nimport * as _ from \"underscore\";\nimport {HtPlaceline} from \"ht-data\";\n\n@Component({\n  selector: 'ht-placeline',\n  template: `<div class=\"flex-column\">\n  <div\n    class=\"flex-row segment\"\n    (click)=\"selectInUserData(segment)\"\n    [class.active-segment]=\"(selectedActivity == segment.id && segment.activityBorder && !selectedSegmentId) || selectedSegmentId === segment.id\"\n    (mouseenter)=\"highlightActivity(segment.id)\"\n    (mouseleave)=\"highlightActivity(null)\"\n    *ngFor=\"let segment of placelineMod; trackBy:indexPlaceline; let last = last\">\n    <div class=\"time-container action-time\">\n      <div class=\"target-status text-muted\">\n      </div>\n      <div class=\"timestamp\">\n        {{segment.time | timeString | dot: 'Unknown ETA'}}\n      </div>\n      <div class=\"text-muted\">\n        {{segment.time | dateString: 'short'}}\n      </div>\n      <!--<div class=\"time-container-mid text-muted\" *ngIf=\"!segment.actionD\">-->\n        <!--<span>{{segment.duration / 60 | hmString}}</span>-->\n      <!--</div>-->\n    </div>\n    <div class=\"pipe\">\n      <div class=\"bar\" *ngIf=\"!last\" [class.big]=\"(selectedActivity == segment.id && segment.activityBorder && !selectedSegmentId) || selectedSegmentId === segment.id\" [class.solid]=\"segment.activityBorder\" [ngClass]=\"segment.activityBorder\"></div>\n    </div>\n    <div class=\"flex-column flex timeline-detail\">\n      <div class=\"activity-dot segment-dot\" [class.activity-dot-ended]=\"segment.actionEnded\" *ngIf=\"segment.actionD\"><div class=\"auto\">{{segment.actionD}} </div></div>\n      <div *ngIf=\"segment.isLive\" [ngClass]=\"segment.activityBg\" class=\"segment-dot\"><div *ngIf=\"segment.isLive\" [ngClass]=\"segment.activityBg\" class=\"pulse\"></div></div>\n      <div *ngIf=\"!segment.isLive && !segment.actionD\" class=\"a-dot\" [ngClass]=\"segment.activityBorder\"></div>\n      <div class=\"flex-column column-gap-10\">\n        <div (mouseenter)=\"selectAction(segment.action_id)\" (mouseleave)=\"selectAction(null)\" class=\"action-card\" *ngIf=\"segment.actionText\">\n          <div class=\"flex-column column-gap-4\">\n            <div class=\"title\">\n              {{segment.actionText}}\n            </div>\n            <div class=\"lookup\" *ngIf=\"segment.actionLookupId\">{{segment.actionLookupId}}</div>\n            <div *ngIf=\"segment.expected_at && segment.actionEnd\">Scheduled at {{segment.expected_at | timeString}}</div>\n            <div *ngIf=\"segment.action_duration\" class=\"flex-row row-gap-4\">\n              <span>{{segment.action_duration / 60 | hmString}}</span>\n              <ng-template [ngIf]=\"(segment.action_distance || segment.action_distance == 0)\">\n                <span>&bull;</span>\n                <span>{{segment.action_distance | distanceLocale}}</span>\n              </ng-template>\n            </div>\n          </div>\n        </div>\n        <!--<pre>-->\n        <!--{{segment | json}}-->\n        <!--</pre>-->\n        <div class=\"activity-card flex-column\" *ngIf=\"segment.activityText\">\n          <div [ngClass]=\"segment.activityColor\">\n            {{segment.activityText | nameCase}}\n          </div>\n          <div class=\"flex-row row-gap-4 activity-stats align-center\" *ngIf=\"segment.duration\">\n            <span>{{segment.duration / 60 | hmString}}</span>\n            <ng-template [ngIf]=\"(segment.distance || segment.distance == 0) && segment.type == 'trip'\">\n              <span>&bull;</span>\n              <span>{{segment.distance | distanceLocale}}</span>\n            </ng-template>\n          </div>\n          <div>\n            {{segment.placeAddress}}\n          </div>\n          <table class=\"table table-bordered table-condensed\" *ngIf=\"segment.events && segment.events.length\">\n            <tbody>\n            <tr *ngFor=\"let event of segment.events; trackBy:indexId\">\n              <td>{{event.recorded_at | timeString}}</td>\n              <td>{{event.text}}</td>\n            </tr>\n            </tbody>\n          </table>\n          <div class=\"close-card\" *ngIf=\"selectedSegmentId == segment.id && !isMobile\" (click)=\"selectInUserData(null, $event)\">\n            <i class=\"fa fa-times-circle fa-2x\"></i>\n          </div>\n        </div>\n        <div *ngIf=\"segment.isLive\" class=\"text-muted heatbeat\">\n          Last heartbeat\n        </div>\n      </div>\n\n\n    </div>\n  </div>\n</div>\n<div class=\"card\" *ngIf=\"placelineMod && placelineMod.length == 0\">\n  <div class=\"card-content-mid text-center\"><strong>No Placeline</strong></div>\n</div>\n`,\n  styles: [`.text-center {\n  text-align: center;\n}\n.text-muted {\n  color: #798E9B;\n}\n.text-right {\n  text-align: right;\n}\n.text-left {\n  text-align: left;\n}\n.text-1 {\n  font-size: 2em;\n}\n.text-4 {\n  font-size: 0.8em;\n}\n.text-capitalize {\n  text-transform: capitalize;\n}\n.text-uppercase {\n  text-transform: uppercase;\n}\n.text-ontime {\n  color: #58ae5b;\n}\n.text-late {\n  color: #E6413E;\n}\n.text-warning {\n  color: #E6413E !important;\n}\n.text-red {\n  color: #E6413E;\n}\n.text-blue {\n  color: #5496F8;\n}\n.truncate {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n.flex-row {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: row;\n          flex-direction: row;\n}\n.flex-column {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: column;\n          flex-direction: column;\n}\n.column-gap-4 > :not(:last-child) {\n  margin-bottom: 4px;\n}\n.row-gap-4 > :not(:last-child) {\n  margin-right: 4px;\n}\n.column-gap-7 > :not(:last-child) {\n  margin-bottom: 7px;\n}\n.row-gap-7 > :not(:last-child) {\n  margin-right: 7px;\n}\n.column-gap-10 > :not(:last-child) {\n  margin-bottom: 10px;\n}\n.row-gap-10 > :not(:last-child) {\n  margin-right: 10px;\n}\n.column-gap-20 > :not(:last-child) {\n  margin-bottom: 20px;\n}\n.row-gap-20 > :not(:last-child) {\n  margin-right: 20px;\n}\n.wrap {\n  -ms-flex-wrap: wrap;\n      flex-wrap: wrap;\n}\n.flex {\n  -webkit-box-flex: 1;\n      -ms-flex: 1;\n          flex: 1;\n}\n.auto {\n  margin: auto;\n}\n.relative {\n  position: relative;\n}\n.space-between {\n  -webkit-box-pack: justify;\n      -ms-flex-pack: justify;\n          justify-content: space-between;\n}\n.space-around {\n  -ms-flex-pack: distribute;\n      justify-content: space-around;\n}\n.justify-center {\n  -webkit-box-pack: center;\n      -ms-flex-pack: center;\n          justify-content: center;\n}\n.flex-center {\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n}\n.align-center {\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n}\n.clickable {\n  cursor: pointer;\n}\n.round-icon {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  width: 23px;\n  height: 23px;\n  background: #315790;\n  border-radius: 50%;\n}\n.flex-half {\n  -ms-flex-preferred-size: 50%;\n      flex-basis: 50%;\n}\n.link-unstyled {\n  color: inherit;\n}\n.link-unstyled:hover {\n  text-decoration: none;\n}\n.half {\n  width: 50%;\n}\n.noselect {\n  -webkit-touch-callout: none;\n  /* iOS Safari */\n  -webkit-user-select: none;\n  /* Chrome/Safari/Opera */\n  /* Konqueror */\n  -moz-user-select: none;\n  /* Firefox */\n  -ms-user-select: none;\n  /* Internet Explorer/Edge */\n  user-select: none;\n  /* Non-prefixed version, currently\n                                  not supported by any browser */\n}\n.hover-shadow:hover {\n  -webkit-box-shadow: 0px 0px 4px 2px rgba(0, 0, 0, 0.16);\n          box-shadow: 0px 0px 4px 2px rgba(0, 0, 0, 0.16);\n}\n.marker-transparent {\n  opacity: 0.4;\n}\n.marker-fade {\n  -webkit-filter: contrast(16%) brightness(160%) blur(0.6px);\n          filter: contrast(16%) brightness(160%) blur(0.6px);\n}\n.tooltip-warning {\n  background: #e04745;\n  color: #fff;\n}\n.tooltip-warning-arrow {\n  border-right-color: #e04745 !important;\n}\n.tooltip-info {\n  background: #5496F8;\n  color: #fff;\n}\n.tooltip-info-arrow {\n  border-right-color: #5496F8 !important;\n}\na {\n  color: inherit;\n  text-decoration: none;\n}\na:hover {\n  color: inherit;\n  text-decoration: none;\n}\na:active {\n  color: inherit;\n  text-decoration: none;\n}\na:focus {\n  outline: none;\n  color: inherit;\n  text-decoration: none;\n}\n.spinner-wave {\n  margin: 0 auto;\n  width: 100px;\n  height: 20px;\n  text-align: center;\n}\n.spinner-wave > div {\n  background-color: #5496F8;\n  height: 100%;\n  width: 6px;\n  display: inline-block;\n  -webkit-animation: wave 1.2s infinite ease-in-out;\n  animation: wave 1.2s infinite ease-in-out;\n}\n.spinner-wave div:nth-child(2) {\n  -webkit-animation-delay: -1.1s;\n  animation-delay: -1.1s;\n}\n.spinner-wave div:nth-child(3) {\n  -webkit-animation-delay: -1s;\n  animation-delay: -1s;\n}\n.spinner-wave div:nth-child(4) {\n  -webkit-animation-delay: -0.9s;\n  animation-delay: -0.9s;\n}\n.spinner-wave div:nth-child(5) {\n  -webkit-animation-delay: -0.8s;\n  animation-delay: -0.8s;\n}\n@-webkit-keyframes wave {\n  0%,\n  40%,\n  100% {\n    -webkit-transform: scaleY(0.4);\n  }\n  20% {\n    -webkit-transform: scaleY(1);\n  }\n}\n@keyframes wave {\n  0%,\n  40%,\n  100% {\n    -webkit-transform: scaleY(0.4);\n            transform: scaleY(0.4);\n  }\n  20% {\n    -webkit-transform: scaleY(1);\n            transform: scaleY(1);\n  }\n}\n@media screen and (max-width: 480px) {\n  .hide-xs {\n    display: none !important;\n  }\n}\n@media screen and (min-width: 480px) {\n  .show-xs {\n    display: none !important;\n  }\n}\n.ht-btn {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  padding: 5px 13px;\n  border: 0;\n  background: #ffffff;\n  color: #52616A;\n  -webkit-box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\n          box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\n}\n.ht-btn:focus {\n  background: #fcfcfc;\n  outline: 0;\n}\n.ht-btn-card:hover {\n  background: #5496F8;\n  color: rgba(255, 255, 255, 0.96);\n  -webkit-box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\n          box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\n}\n.stopped-color {\n  color: #FFBB44;\n}\n.drive-color {\n  color: #5496F8;\n}\n.walk-color {\n  color: #5496F8;\n}\n.moving-color {\n  color: #5496F8;\n}\n.logged_off-color {\n  color: #A9BAC4;\n}\n.network_offline-color {\n  color: #d19191;\n}\n.location_disabled-color {\n  color: #d19191;\n}\n.location_low_accuracy-color {\n  color: #d19191;\n}\n.stopped-bg {\n  background: #FFBB44;\n}\n.drive-bg {\n  background: #5496F8;\n}\n.walk-bg {\n  background: #5496F8;\n}\n.moving-bg {\n  background: #5496F8;\n}\n.logged_off-bg {\n  background: #A9BAC4;\n}\n.network_offline-bg {\n  background: #d19191;\n}\n.location_disabled-bg {\n  background-color: #d19191;\n}\n.location_low_accuracy-bg {\n  background-color: #d19191;\n}\n:host {\n  margin: 30px 0;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: column;\n          flex-direction: column;\n}\n.segment {\n  border-radius: 4px;\n  padding-right: 18px;\n}\n.active-segment {\n  background: rgba(255, 255, 255, 0.75);\n}\n.trip-status {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: column;\n          flex-direction: column;\n  text-align: center;\n  color: #52616A;\n  margin-bottom: 20px;\n  position: relative;\n}\n.trip-status .status-main {\n  font-size: 31px;\n  font-weight: 600;\n}\n.trip-status .status-sub {\n  color: #798E9B;\n  font-size: 12px;\n}\n.ht-breadcrumb {\n  padding-bottom: 19px;\n}\n.card {\n  margin-bottom: 9px;\n}\n.card .action-img {\n  margin: 0 auto;\n}\n.card .content-right {\n  -ms-flex-pack: distribute;\n      justify-content: space-around;\n  position: relative;\n  text-align: center;\n}\n.driver-container {\n  margin-bottom: 20px;\n  border-bottom: 1px solid #C9D6DE;\n  padding-bottom: 16px;\n}\n.driver-container .text-muted {\n  color: #A9BAC4;\n}\n.task-status {\n  padding-bottom: 20px;\n  text-align: center;\n  color: #52616A;\n}\n.time-container {\n  width: 84px;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: column;\n          flex-direction: column;\n  text-align: right;\n  padding-right: 20px;\n  padding-bottom: 16px;\n  z-index: 5;\n  color: #52616A;\n}\n.time-container .target-status {\n  font-size: 10px;\n}\n.time-container .timestamp {\n  font-size: 14px;\n  color: #52616A;\n}\n.time-container .text-muted {\n  color: #A9BAC4;\n  font-size: 12px;\n}\n.time-container .timestamp-text {\n  font-size: 12px;\n  color: #52616A;\n  font-weight: 700;\n}\n.time-container-mid {\n  height: 100%;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-pack: end;\n      -ms-flex-pack: end;\n          justify-content: flex-end;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n}\n.pipe {\n  width: 20px;\n  min-width: 20px;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: column;\n          flex-direction: column;\n  -webkit-box-pack: center;\n      -ms-flex-pack: center;\n          justify-content: center;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  z-index: 1;\n}\n.pipe .bar {\n  height: 100%;\n  -webkit-box-flex: 1;\n      -ms-flex: 1;\n          flex: 1;\n}\n.pipe .big {\n  outline: 2px solid;\n}\n.pipe .solid {\n  border-right: 3px solid #798E9B;\n}\n.pipe .line {\n  border-right: 3px dotted #798E9B;\n}\n.pipe .line-border {\n  border-right: 3px dotted #798E9B;\n  outline: 0;\n}\n.pipe .light {\n  border-right: 3px dashed rgba(121, 142, 155, 0.4);\n}\n.pipe .fade {\n  border-right: 3px solid rgba(121, 142, 155, 0.14);\n}\n.timeline-detail {\n  padding-bottom: 22px;\n  position: relative;\n  padding-left: 16px;\n  min-height: 66px;\n}\n.timeline-detail .task-action {\n  font-size: 16px;\n  color: #52616A;\n  text-transform: capitalize;\n  margin-bottom: 4px;\n  -webkit-transition: font-size 0.4s;\n  transition: font-size 0.4s;\n}\n.timeline-detail .action-title {\n  font-size: 16px;\n  color: #52616A;\n  text-transform: capitalize;\n  -webkit-transition: font-size 0.4s;\n  transition: font-size 0.4s;\n  font-weight: 700;\n}\n.timeline-detail .task-detail {\n  background: #fff;\n  padding: 6px 10px;\n  color: #52616A;\n  -webkit-transition: font-size 0.4s;\n  transition: font-size 0.4s;\n}\n.timeline-detail .task-icon {\n  position: absolute;\n  left: -23px;\n  top: -2px;\n}\n.timeline-detail .task-ontime-status {\n  color: #55ad58;\n  padding-bottom: 4px;\n  font-size: 11px;\n  -webkit-transition: font-size 0.4s;\n  transition: font-size 0.4s;\n}\n.timeline-detail .text-late {\n  color: #E6413E;\n}\n.selected-task .task-action {\n  font-size: 18px;\n}\n.selected-task .task-detail {\n  font-size: 13px;\n}\n.selected-task .task-ontime-status {\n  font-size: 13px;\n}\n.trip-event .pipe {\n  padding-top: 7px;\n}\n.trip-event .time-container {\n  padding-bottom: 24px;\n}\n.segment-dot {\n  width: 25px;\n  height: 25px;\n  border-radius: 50%;\n  background: #fff;\n  position: absolute;\n  top: -1px;\n  left: -23px;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  z-index: 2;\n}\n.a-dot {\n  width: 9px;\n  height: 9px;\n  border-radius: 50%;\n  background: #fff;\n  border: 2px solid #798E9B;\n  position: absolute;\n  top: -4px;\n  left: -14px;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  background-color: white;\n  z-index: 2;\n}\n.activity-dot {\n  border: 1px solid #798E9B;\n  font-size: 10px;\n}\n.activity-dot-ended {\n  background: #798E9B;\n  color: #fff;\n}\n.trip-dot {\n  border: 0px solid #5496F8;\n  background: #5496F8;\n}\n.trip-dot .pulse {\n  background: #5496F8;\n}\n.stop-dot {\n  border: 0px solid #5496F8;\n  background: #5496F8;\n}\n.stop-dot .pulse {\n  background: #5496F8;\n}\n@-webkit-keyframes pulse {\n  0% {\n    -webkit-transform: scale(0.3, 0.3);\n            transform: scale(0.3, 0.3);\n    opacity: 0.9;\n  }\n  100% {\n    -webkit-transform: scale(3, 3);\n            transform: scale(3, 3);\n    opacity: 0;\n  }\n}\n@keyframes pulse {\n  0% {\n    -webkit-transform: scale(0.3, 0.3);\n            transform: scale(0.3, 0.3);\n    opacity: 0.9;\n  }\n  100% {\n    -webkit-transform: scale(3, 3);\n            transform: scale(3, 3);\n    opacity: 0;\n  }\n}\n.ranges li.active {\n  background: #52616A;\n  border-color: #52616A;\n}\n.ranges li {\n  color: #52616A;\n}\n.ranges li:hover {\n  background: #52616A;\n  border-color: #52616A;\n}\n.pulse {\n  border-radius: 50%;\n  height: 25px;\n  width: 25px;\n  -webkit-animation: pulse 3s ease-out;\n          animation: pulse 3s ease-out;\n  -webkit-animation-iteration-count: infinite;\n          animation-iteration-count: infinite;\n  position: absolute;\n  z-index: 10;\n  opacity: 1;\n  margin: auto;\n}\n.trip {\n  color: #5496F8;\n  border-color: #5496F8 !important;\n}\n.stop {\n  color: #FFBB44;\n  border-color: #FFBB44 !important;\n}\n.no-info {\n  color: #FFBB44;\n  border-color: #A9BAC4 !important;\n}\n.ht-faded {\n  opacity: 0.4;\n}\n.action {\n  position: absolute;\n  top: 6px;\n  padding: 3px;\n  font-size: 19px;\n  color: #798E9B;\n}\n.action-left {\n  left: 11px;\n  font-size: 35px;\n  color: #A9BAC4;\n}\n.action-left:hover {\n  color: #798E9B;\n}\n.text-sm {\n  font-size: 11px;\n  color: #52616A;\n  padding-bottom: 7px;\n}\n.title {\n  font-size: 13px;\n  font-weight: bold;\n}\n.activity-card {\n  padding: 6px 10px;\n  color: #52616A;\n  -webkit-transition: font-size 0.4s;\n  transition: font-size 0.4s;\n  font-size: 13px;\n  position: relative;\n  cursor: pointer;\n}\n.activity-card-selected {\n  background: #fff;\n}\n.activity-card-selected:hover {\n  background: #fff;\n}\n.activity-card .close-card {\n  position: absolute;\n  top: -3px;\n  right: -3px;\n  color: #52616A;\n  height: 14px;\n  width: 14px;\n  border-radius: 50%;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n}\n.activity-card .close-card .fa {\n  margin: auto;\n}\n.action-card {\n  background: #fff;\n  padding: 3px 11px;\n  border: 1px solid #C9D6DE;\n  font-size: 11px;\n  cursor: pointer;\n  color: #52616A;\n  margin-left: -127px;\n  padding-left: 134px;\n  margin-top: -9px;\n  min-height: 50px;\n  -webkit-box-shadow: 1px 2px 2px 0px rgba(0, 0, 0, 0.07);\n          box-shadow: 1px 2px 2px 0px rgba(0, 0, 0, 0.07);\n}\n.action-card:hover {\n  border: 1px solid #798E9B;\n}\n.action-card-active {\n  border: 1px solid #798E9B;\n}\n.trip-border {\n  border-color: #5496F8 !important;\n  outline-color: #5496F8 !important;\n}\n.stop-border {\n  border-color: #FFBB44 !important;\n  outline-color: #FFBB44 !important;\n}\n.no-info-border {\n  border-color: #A9BAC4 !important;\n  outline-color: #A9BAC4 !important;\n}\n.warning-border {\n  border-color: #d19191 !important;\n  outline-color: #d19191 !important;\n}\n.trip-bg {\n  background: #5496F8;\n}\n.stop-bg {\n  background: #FFBB44;\n}\n.no-info-bg {\n  background: #A9BAC4;\n}\n.warning-bg {\n  background: #d19191;\n}\n.trip-color {\n  color: #5496F8;\n}\n.stop-color {\n  color: #ffb025;\n}\n.no-info-color {\n  color: #A9BAC4;\n}\n.warning-color {\n  color: #d19191;\n}\n.table {\n  margin: 7px 0;\n  font-size: 11px;\n}\n.activity-stats {\n  font-size: 12px;\n  font-weight: bold;\n}\n.heatbeat {\n  padding-left: 12px;\n  font-size: 13px;\n}\n`],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PlacelineComponent implements OnInit {\n\n  @Output() highlightedSegmentId = new EventEmitter();\n  @Output() hoveredAction = new EventEmitter();\n  @Output() selectedSegment: EventEmitter<string | null> = new EventEmitter();\n  @Input() userData: IUserData;\n  @Input() selectedSegmentId: string = \"__\";\n  @Input() isMobile: boolean = false;\n  selectedAction: string | null = null;\n  selectedActivity: string | null = \"\";\n  hardSelectedActivity: string | null = \"\";\n  // icons = TaskCardIcon;\n  actionMap = {};\n  constructor(private ref: ChangeDetectorRef) {\n\n  }\n\n  selectInUserData(segment, event?) {\n    if (segment && (segment.type === 'trip' || segment.type === 'stop')) {\n      const id = segment.id;\n\n      let hardSelectedActivity = this.selectedSegmentId === id ? null : segment.id;\n      this.selectedSegment.next(hardSelectedActivity)\n    } else {\n      this.hardSelectedActivity = \"\";\n      this.selectedSegment.next(null);\n      if (event) event.stopPropagation()\n    }\n  }\n\n  selectSegment(segment, toShow: boolean = true) {\n    if (segment.actionText) {\n      const actionId = toShow ? segment.action_id : null;\n      this.selectAction(actionId)\n    } else {\n      const userId = toShow ? segment.id : null;\n      this.highlightActivity(userId)\n    }\n  }\n\n  hoverActivity(activityId) {\n    this.selectedActivity = activityId;\n    this.ref.detectChanges()\n  }\n\n  highlightActivity(activityId) {\n    if (this.selectedSegmentId) return false;\n    this.highlightedSegmentId.next(activityId);\n    this.hoverActivity(activityId);\n    // console.log(this.selectedActivity, \"sele\");\n  }\n\n  selectAction(actionId) {\n    this.selectedAction = actionId;\n    this.hoveredAction.next(actionId);\n    this.ref.detectChanges()\n  }\n\n  get placelineMod() {\n    const placeline = this.userData;\n    if (this.userData.segments.length === 0) return [];\n    const actions = placeline.actions;\n    this.actionMap = {};\n    const {currentActions, expActions} = this.currentExpActions(actions);\n    const allEvents = this.userData.events;\n\n\n    let {activitySegments} = _.reduce(this.userData.segments, (acc, segment: ISegment) => {\n      const time = segment.started_at;\n      const activityText = this.getActivityText(segment);\n      const activityClass = this.getActivityClass(segment);\n      const placeAddress = this.getActivityPlaceAddress(segment);\n      const lastSeg = segment;\n      const gapSegment = this.getGapSegment(segment, acc.lastSeg);\n      // let lastSeg = _.last(acc.activitySegments);\n      const currentActivitySegment = {...segment, time, events: [], ...this.getSegmentStyle(activityClass), activityText, placeAddress};\n      const events = _.reject(acc.events, (event) => {\n\n        if (this.isEventInSegment(segment, event)) {\n          // event = {...event, ...this.getEventDisplay(event)};\n          const eventDisplay = this.getEventDisplay(event);\n          if (eventDisplay) currentActivitySegment.events.push({...event, ...eventDisplay});\n          return true\n        }\n        return false\n      });\n      // console.log(gapSegment, \"gap\");\n      let activitySegments =  [...acc.activitySegments, ...gapSegment, currentActivitySegment];\n      // let activitySegments =  [...acc.activitySegments, currentActivitySegment];\n      return {activitySegments, events, lastSeg};\n    }, {activitySegments: [], events: allEvents, lastSeg: null});\n\n\n    const lastSeg = this.lastSeg(placeline);\n    // activitySegments.push(lastSeg);\n    // return activitySegments\n\n\n    let {actionSegments, actionEvents} = _.reduce([...activitySegments, lastSeg], (acc, segment, i, placelineM) => {\n      activitySegments = acc.activitySegments;\n      let lastSeg = segment;\n      let activityClass = acc.lastSeg ? acc.lastSeg.activityClass : 'no-info';\n      let actionSegments = acc.actionSegments;\n      let actionEvents = _.reject(acc.actionEvents, (actionEvent) => {\n        let actionMin = this.getMinute(actionEvent.actionTime);\n        let segTime = this.getMinute(segment.time);\n        if(actionMin == segTime && !segment.ended && !segment.actionText) {\n          // if(actionEvent.actionTime == segment.time) {\n          let actionSegment = this.createActionSegment(actionEvent, activityClass, acc.lastSeg);\n          segment = {...actionSegment, ...segment};\n          return true\n        } else if(actionEvent.actionTime <= segment.time) {\n          // console.log(\"np match\");\n          let actionSegment = this.createActionSegment(actionEvent, activityClass, acc.lastSeg);\n          actionSegments.push(actionSegment);\n          return true\n        } else {\n        }\n        return false\n      });\n      if(segment.ended && !segment.actionText) {\n      } else if(segment.ended) {\n        activitySegments.push({...segment, ended: false});\n      } else {\n        activitySegments.push(segment);\n      }\n      // activitySegments.push(segment);\n      return {activitySegments, actionEvents, lastSeg, actionSegments}\n    }, {activitySegments: [], actionEvents: currentActions, lastSeg: null, actionSegments: []});\n    // activitySegments.pop();\n\n    let unsortedCurrentSegment = [...activitySegments, ...actionSegments];\n    let currentSegment = _.sortBy(unsortedCurrentSegment, (segment) => {\n      return segment.time\n    });\n    let restActiviySegments = _.map(actionEvents, (actionEvent, i) => {\n      lastSeg['activityBorder'] = 'no-info-border';\n      lastSeg['activityText'] = 'No information';\n      // let activityClass = i < actionEvents.length - 2 ? 'no-info' : 'line';\n      return this.createActionSegment(actionEvent, 'no-info')\n    });\n    let expActionSegments = _.map(expActions, (actionEvent, i, expEvents) => {\n      if(actionEvents.length === 0) {\n        lastSeg['activityBorder'] = 'line-border';\n      }\n      const activityClass = i < expEvents.length - 2 ? 'line' : '';\n      return this.createActionSegment(actionEvent, activityClass)\n    });\n    // console.log(actionSegments, expActionSegments, \"ac\");\n    // console.log(\"last seeg\", lastSeg);\n    // console.log(activitySegments.length,actionSegments.length , expActionSegments.length);\n    // console.log(this.userData.segments.length, this.userData.actions.length);\n    return lastSeg['time'] ?\n      [...currentSegment, lastSeg, ...restActiviySegments, ...expActionSegments] : [...currentSegment, ...expActionSegments]\n  }\n\n  private createActionSegment(actionEvent, activityClass = 'no-info', seg = {}) {\n    let id = seg ? seg['id'] : '';\n    return {...actionEvent, time: actionEvent.actionTime, ...this.getSegmentStyle(activityClass), ended: false, isLive: false, id};\n  }\n\n  private getSegmentStyle(activityClass = 'no-info') {\n    return activityClass ?\n      {\n        activityBg: `${activityClass}-bg`,\n        activityBorder: `${activityClass}-border`,\n        activityClass,\n        activityColor: `${activityClass}-color`\n      } : {}\n  }\n\n  private isEventInSegment(segment, event): boolean {\n    if (!!segment.ended_at && !!event.recorded_at) {\n      const eventMin = this.getMinute(event.recorded_at);\n      const segEndMin = this.getMinute(segment.ended_at);\n      const segStartMin = this.getMinute(segment.started_at);\n      return eventMin >= segStartMin && eventMin <= segEndMin;\n    }\n    return false;\n  }\n\n  private getMinute(time: string) {\n    const timeStamp = new Date(time).getTime();\n    return Math.round(timeStamp - timeStamp % 60000)\n  }\n\n  private currentExpActions(actions: IAction[]) {\n    return _.reduce(actions, (acc, action: IAction) => {\n      let expActions = [];\n      this.actionMap = this.setActionMap(action);\n      const assign = {\n        actionText: `${NameCase(action.type)} assigned`,\n        actionTime: action.assigned_at,\n        actionD: NameCase(action.type[0]) + this.actionMap[action.id],\n        action_id: action.id,\n        actionLookupId: action.lookup_id,\n        ...action\n      };\n      let currentActions = (assign.actionTime) ? [...acc.currentActions, assign] : acc.currentActions;\n      if (action.display.ended_at) {\n        const end = {\n          actionText: `${NameCase(action.type)} ${action.status}`,\n          actionTime: action.display.ended_at,\n          actionD: NameCase(action.type[0]) + this.actionMap[action.id],\n          actionEnd: true,\n          action_id: action.id,\n          action_distance: action.distance,\n          action_duration: action.duration,\n          actionEnded: true,\n          actionLookupId: action.lookup_id,\n          ...action\n        };\n        currentActions = [...currentActions, end];\n      } else {\n        const end = {\n          actionText: `${NameCase(action.type)} scheduled`,\n          actionTime: action.eta || null,\n          actionD: NameCase(action.type[0]) + this.actionMap[action.id],\n          actionEnd: true,\n          action_id: action.id,\n          action_distance: action.distance,\n          action_duration: action.duration,\n          actionLookupId: action.lookup_id,\n          ...action\n        };\n        expActions.push(end)\n      }\n\n      return {currentActions, expActions}\n    }, {currentActions: [], expActions: []});\n  }\n\n  // private getActionsSegments(segment: ISegment, actionsEvents, lastSeg) {\n  //   let currentSegment = {};\n  //   let start = segment.started_at;\n  //   let lastStart = lastSeg ? lastSeg.started_at : null;\n  //\n  //   preSegment = _.filter(actionsEvents, (actionEvent) => {\n  //     return lastStart ? (actionEvent.actionTime < start && actionEvent.actionTime > lastStart) : actionEvent.actionTime < start\n  //   });\n  //   postSegment = _.filter(actionsEvents, (actionEvent) => {\n  //     return lastStart ? (actionEvent.actionTime > start && actionEvent.actionTime > lastStart) : actionEvent.actionTime < start\n  //   });\n  //   return {preSegment, postSegment, currentSegment}\n  // }\n\n  private lastSeg(placeline: IUserData) {\n    let lastSeg: ISegment = _.last(placeline.segments);\n    if(!lastSeg) return {};\n    // let last = {time: lastSeg['last_heartbeat_at']};\n    let pipeClass = \"\";\n    let time;\n    let isLive = new HtPlaceline().isLive(placeline);\n    if(!isLive) {\n      time = lastSeg.ended_at\n    } else {\n      isLive = true;\n      time = placeline.last_heartbeat_at\n    }\n    const activityClass = this.getActivityClass(lastSeg);\n    return {time, pipeClass, id: '..', lastSeg: true, isLive, ended: true, activityClass, activityBg: `${this.getActivityClass(lastSeg)}-bg`}\n  }\n\n  private isSegmentLive(placeline: IUserData) {\n    let old = placeline.display.seconds_elapsed_since_last_heartbeat;\n    let status = placeline.display.status_text;\n    return status !== 'Logged off' && old < 15 * 60;\n  }\n\n  private getActivityClass(segment) {\n    const type = segment.type;\n    if (type === 'location_void') {\n      return 'warning'\n    }\n    return type === 'stop' ? 'stop' : 'trip'\n  }\n\n  getPipeClass(status: string) {\n\n    return status === 'stop' ? 'stop solid' : 'trip solid'\n  }\n\n  private getActivityText(segment: ISegment | any) {\n    if(segment.activity) {\n      return segment.activity\n    } else if (segment.type === 'stop') {\n      return 'Stop'\n    } else if(segment.reason) {\n      return this.getLocationVoidText(segment)\n    } else {\n      return NameCase(segment.type)\n    }\n  }\n\n  private getActivityPlaceAddress(segment: ISegment) {\n    if (segment.type === 'stop' && segment.place && segment.place.locality) {\n      return segment.place.locality\n    }\n    return \"\"\n  }\n\n  private getLocationVoidText(segment) {\n    switch(segment.reason) {\n      case 'disabled':\n        return \"Location disabled\";\n      case 'no_permission':\n        return \"Location permission unavailable\";\n      case 'unknown':\n        return \"Location unavailable\";\n      case 'sdk_inactive': {\n        return \"SDK inactive\"\n      }\n      case \"no_activity_permission\": {\n        return \"No activity permission\"\n      }\n      case \"device_off\": {\n        return \"Device off\"\n      }\n      default:\n        return \"Location unavailable\"\n    }\n  }\n\n  private getEventDisplay(event) {\n    switch (event.type) {\n      case 'tracking.started':\n        return {\n          text: 'Tracking started',\n          subtext: ''\n        };\n      case 'tracking.ended':\n        return {\n          text: 'Tracking ended',\n          subtext: ''\n        };\n      // case 'device.location.disabled':\n      //   return {\n      //     text: 'Location disabled',\n      //     subtext: ''\n      //   };\n      // case 'device.location.enabled':\n      //   return {\n      //     text: 'Location enabled',\n      //     subtext: ''\n      //   };\n      // case 'device.location_permission.disabled':\n      //   return {\n      //     text: 'Location permission disabled',\n      //     subtext: ''\n      //   };\n      // case 'device.location_permission.enabled':\n      //   return {\n      //     text: 'Location permission enabled',\n      //     subtext: ''\n      //   };\n      case 'device.secondary.ignored':\n        return {\n          text: 'Secondary device ignored',\n          subtext: ''\n        };\n    }\n  }\n\n  private getGapSegment(segment, lastSeg) {\n    let gaps = [];\n    if (!lastSeg) return [];\n    if (segment.started_at && lastSeg.ended_at) {\n      const endMin = this.getMinute(segment.started_at);\n      const startMin = this.getMinute(lastSeg.ended_at);\n      const duration = (new Date(segment.started_at).getTime() -  new Date(lastSeg.ended_at).getTime()) / 1000\n      if (endMin !== startMin && startMin < endMin) {\n        const gap = {\n          ...this.getSegmentStyle('no-info'),\n          time: lastSeg.ended_at,\n          activityText: 'No information',\n          events: [],\n          id: '...',\n          duration,\n        };\n        gaps.push(gap)\n      }\n    }\n    return gaps\n  }\n\n  private setActionMap(action) {\n    const actionMap = this.actionMap;\n    const type = action.type;\n    const id = action.id;\n    const typeCount = this.actionMap[type];\n    const actionShort = this.actionMap[id];\n    if (typeCount) {\n      if (!actionShort) {\n        actionMap[type] = this.actionMap[type] + 1;\n        actionMap[id] = '' + this.actionMap[type]\n      }\n\n    } else {\n      actionMap[type] = 1;\n      actionMap[id] = ''\n\n    }\n    // console.log(actionMap, \"map\");\n    return {...actionMap}\n  }\n\n  indexId(index, item){\n    return item.id\n  }\n\n  indexPlaceline(index, item) {\n    return item.time || \"\"\n  }\n\n  log(a) {\n    console.log(a)\n  }\n\n  ngOnInit() {\n  }\n\n}\n",
    "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PlacelineComponent } from './placeline.component';\nimport {SharedModule} from \"../shared/shared.module\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule\n  ],\n  declarations: [PlacelineComponent],\n  exports: [PlacelineComponent]\n})\nexport class PlacelineModule { }\n",
    "import {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {IUserData} from \"ht-models\";\nimport {animate, style, transition, trigger} from \"@angular/animations\";\nimport {HtUsersService} from \"../ht/ht-users.service\";\n\n@Component({\n  selector: 'ht-placeline-container',\n  template: `<div class=\"flex-column column-gap-10\" *ngIf=\"userData$ | async as userData; else loading\">\n  <ht-user-card *ngIf=\"showUserCard\" [user]=\"userData\"></ht-user-card>\n  <ht-placeline [selectedSegmentId]=\"selectedSegmentId$ | async\" (selectedSegment)=\"onSelectSegmentId($event)\" (highlightedSegmentId)=\"onHighlightSegment($event)\" [userData]=\"userData\"></ht-placeline>\n</div>\n<ng-template #loading>\n  <ht-loading-dots class=\"text-1 text-center flex-row\"></ht-loading-dots>\n</ng-template>\n`,\n  styles: [`.text-center {\n  text-align: center;\n}\n.text-muted {\n  color: #798E9B;\n}\n.text-right {\n  text-align: right;\n}\n.text-left {\n  text-align: left;\n}\n.text-1 {\n  font-size: 2em;\n}\n.text-4 {\n  font-size: 0.8em;\n}\n.text-capitalize {\n  text-transform: capitalize;\n}\n.text-uppercase {\n  text-transform: uppercase;\n}\n.text-ontime {\n  color: #58ae5b;\n}\n.text-late {\n  color: #E6413E;\n}\n.text-warning {\n  color: #E6413E !important;\n}\n.text-red {\n  color: #E6413E;\n}\n.text-blue {\n  color: #5496F8;\n}\n.truncate {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n.flex-row {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: row;\n          flex-direction: row;\n}\n.flex-column {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: column;\n          flex-direction: column;\n}\n.column-gap-4 > :not(:last-child) {\n  margin-bottom: 4px;\n}\n.row-gap-4 > :not(:last-child) {\n  margin-right: 4px;\n}\n.column-gap-7 > :not(:last-child) {\n  margin-bottom: 7px;\n}\n.row-gap-7 > :not(:last-child) {\n  margin-right: 7px;\n}\n.column-gap-10 > :not(:last-child) {\n  margin-bottom: 10px;\n}\n.row-gap-10 > :not(:last-child) {\n  margin-right: 10px;\n}\n.column-gap-20 > :not(:last-child) {\n  margin-bottom: 20px;\n}\n.row-gap-20 > :not(:last-child) {\n  margin-right: 20px;\n}\n.wrap {\n  -ms-flex-wrap: wrap;\n      flex-wrap: wrap;\n}\n.flex {\n  -webkit-box-flex: 1;\n      -ms-flex: 1;\n          flex: 1;\n}\n.auto {\n  margin: auto;\n}\n.relative {\n  position: relative;\n}\n.space-between {\n  -webkit-box-pack: justify;\n      -ms-flex-pack: justify;\n          justify-content: space-between;\n}\n.space-around {\n  -ms-flex-pack: distribute;\n      justify-content: space-around;\n}\n.justify-center {\n  -webkit-box-pack: center;\n      -ms-flex-pack: center;\n          justify-content: center;\n}\n.flex-center {\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n}\n.align-center {\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n}\n.clickable {\n  cursor: pointer;\n}\n.round-icon {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  width: 23px;\n  height: 23px;\n  background: #315790;\n  border-radius: 50%;\n}\n.flex-half {\n  -ms-flex-preferred-size: 50%;\n      flex-basis: 50%;\n}\n.link-unstyled {\n  color: inherit;\n}\n.link-unstyled:hover {\n  text-decoration: none;\n}\n.half {\n  width: 50%;\n}\n.noselect {\n  -webkit-touch-callout: none;\n  /* iOS Safari */\n  -webkit-user-select: none;\n  /* Chrome/Safari/Opera */\n  /* Konqueror */\n  -moz-user-select: none;\n  /* Firefox */\n  -ms-user-select: none;\n  /* Internet Explorer/Edge */\n  user-select: none;\n  /* Non-prefixed version, currently\n                                  not supported by any browser */\n}\n.hover-shadow:hover {\n  -webkit-box-shadow: 0px 0px 4px 2px rgba(0, 0, 0, 0.16);\n          box-shadow: 0px 0px 4px 2px rgba(0, 0, 0, 0.16);\n}\n.marker-transparent {\n  opacity: 0.4;\n}\n.marker-fade {\n  -webkit-filter: contrast(16%) brightness(160%) blur(0.6px);\n          filter: contrast(16%) brightness(160%) blur(0.6px);\n}\n.tooltip-warning {\n  background: #e04745;\n  color: #fff;\n}\n.tooltip-warning-arrow {\n  border-right-color: #e04745 !important;\n}\n.tooltip-info {\n  background: #5496F8;\n  color: #fff;\n}\n.tooltip-info-arrow {\n  border-right-color: #5496F8 !important;\n}\na {\n  color: inherit;\n  text-decoration: none;\n}\na:hover {\n  color: inherit;\n  text-decoration: none;\n}\na:active {\n  color: inherit;\n  text-decoration: none;\n}\na:focus {\n  outline: none;\n  color: inherit;\n  text-decoration: none;\n}\n.spinner-wave {\n  margin: 0 auto;\n  width: 100px;\n  height: 20px;\n  text-align: center;\n}\n.spinner-wave > div {\n  background-color: #5496F8;\n  height: 100%;\n  width: 6px;\n  display: inline-block;\n  -webkit-animation: wave 1.2s infinite ease-in-out;\n  animation: wave 1.2s infinite ease-in-out;\n}\n.spinner-wave div:nth-child(2) {\n  -webkit-animation-delay: -1.1s;\n  animation-delay: -1.1s;\n}\n.spinner-wave div:nth-child(3) {\n  -webkit-animation-delay: -1s;\n  animation-delay: -1s;\n}\n.spinner-wave div:nth-child(4) {\n  -webkit-animation-delay: -0.9s;\n  animation-delay: -0.9s;\n}\n.spinner-wave div:nth-child(5) {\n  -webkit-animation-delay: -0.8s;\n  animation-delay: -0.8s;\n}\n@-webkit-keyframes wave {\n  0%,\n  40%,\n  100% {\n    -webkit-transform: scaleY(0.4);\n  }\n  20% {\n    -webkit-transform: scaleY(1);\n  }\n}\n@keyframes wave {\n  0%,\n  40%,\n  100% {\n    -webkit-transform: scaleY(0.4);\n            transform: scaleY(0.4);\n  }\n  20% {\n    -webkit-transform: scaleY(1);\n            transform: scaleY(1);\n  }\n}\n@media screen and (max-width: 480px) {\n  .hide-xs {\n    display: none !important;\n  }\n}\n@media screen and (min-width: 480px) {\n  .show-xs {\n    display: none !important;\n  }\n}\n.ht-btn {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  padding: 5px 13px;\n  border: 0;\n  background: #ffffff;\n  color: #52616A;\n  -webkit-box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\n          box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\n}\n.ht-btn:focus {\n  background: #fcfcfc;\n  outline: 0;\n}\n.ht-btn-card:hover {\n  background: #5496F8;\n  color: rgba(255, 255, 255, 0.96);\n  -webkit-box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\n          box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\n}\n.stopped-color {\n  color: #FFBB44;\n}\n.drive-color {\n  color: #5496F8;\n}\n.walk-color {\n  color: #5496F8;\n}\n.moving-color {\n  color: #5496F8;\n}\n.logged_off-color {\n  color: #A9BAC4;\n}\n.network_offline-color {\n  color: #d19191;\n}\n.location_disabled-color {\n  color: #d19191;\n}\n.location_low_accuracy-color {\n  color: #d19191;\n}\n.stopped-bg {\n  background: #FFBB44;\n}\n.drive-bg {\n  background: #5496F8;\n}\n.walk-bg {\n  background: #5496F8;\n}\n.moving-bg {\n  background: #5496F8;\n}\n.logged_off-bg {\n  background: #A9BAC4;\n}\n.network_offline-bg {\n  background: #d19191;\n}\n.location_disabled-bg {\n  background-color: #d19191;\n}\n.location_low_accuracy-bg {\n  background-color: #d19191;\n}\n:host {\n  max-width: 500px;\n}\nht-loading-dots {\n  width: 100%;\n  margin-top: 20%;\n}\n`],\n  // animations: [\n  //   trigger('slide', [\n  //     transition(':enter', [\n  //       style({transform: 'translateY(100px)'}),\n  //       animate('0.3s' + ' ease-out')\n  //     ]),\n  //     transition(':leave', [\n  //       animate('0.3s' + ' ease-in', style({transform: 'translateY(100px)'}))\n  //     ])\n  //   ])\n  // ]\n})\nexport class PlacelineContainerComponent implements OnInit, OnDestroy {\n  @Input() userId: string | null;\n  @Input() showUserCard: boolean = true;\n  userData$;\n  selectedSegmentId$;\n  constructor(\n    private userClientService: HtUsersService,\n  ) { }\n\n  ngOnInit() {\n    this.selectedSegmentId$ = this.userClientService.placeline.segmentResetId$;\n\n    this.userData$ = this.userClientService.placeline.data$;\n\n    if (this.userId) {\n      this.userClientService.placeline.setId(this.userId)\n    }\n  }\n\n  onHighlightSegment(segmentId: string) {\n    this.userClientService.placeline.setSegmentSelectedId(segmentId);\n  }\n\n  onSelectSegmentId(segmentId: string | null) {\n    this.userClientService.placeline.setSegmentResetMapId(segmentId);\n  }\n\n  ngOnDestroy() {\n    this.userClientService.placeline.setId(null);\n    this.userClientService.placeline.clearData();\n  }\n\n}\n",
    "import {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {animate, style, transition, trigger} from \"@angular/animations\";\nimport {HtUsersService} from \"../ht/ht-users.service\";\nimport {QueryLabel} from \"ht-client\";\n\n@Component({\n  selector: 'ht-users-summary-container',\n  template: `<div [@summaryAnim] *ngIf=\"summary$ | async as summary\">\n  <ht-users-summary\n    [hideTotal]=\"hideTotal\"\n    (clearQueryKey)=\"onClearQueryKey($event)\"\n    (setQuery)=\"setQuery($event)\"\n    [selectable]=\"selectable\"\n    [summary]=\"summary\"></ht-users-summary>\n</div>\n\n`,\n  styles: [`ht-users-summary {\n  padding: 10px 20px;\n}\n`],\n  animations: [\n    trigger('summaryAnim', [\n      transition(':enter', [\n        style({transform: 'translateX(-100px) scaleY(0)', height: 0, opacity: 0}),\n        animate('0.3s' + ' ease-out')\n      ]),\n      transition(':leave', [\n        animate('0.3s' + ' ease-in', style({transform: 'translateX(-100px)', height: 0, opacity: 0}))\n      ])])\n  ]\n})\nexport class UsersSummaryContainerComponent implements OnInit, OnDestroy {\n  summary$;\n  @Input() queryLabels: QueryLabel[];\n  @Input() hideTotal: boolean = false;\n  @Input() selectable: boolean = false;\n  constructor(\n    private usersClientService: HtUsersService\n  ) { }\n\n  ngOnInit() {\n    this.usersClientService.summary.setActive();\n    this.summary$ = this.usersClientService.listStatusChart$(this.queryLabels);\n    // this.summary$ = this.usersClientService.summary.data$\n\n  }\n\n  onClearQueryKey(key) {\n    this.usersClientService.list.clearQueryKey(key)\n  }\n\n  setQuery(query: object) {\n    this.usersClientService.list.setQueryReset(query)\n  }\n\n  ngOnDestroy() {\n    this.usersClientService.summary.clearData()\n  }\n\n}\n",
    "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PlacelineContainerComponent } from './placeline-container.component';\nimport {PlacelineModule} from \"../placeline/placeline.module\";\nimport {UserCardModule} from \"../user-card/user-card.module\";\nimport {SharedModule} from \"../shared/shared.module\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    PlacelineModule,\n    UserCardModule,\n    SharedModule\n  ],\n  declarations: [PlacelineContainerComponent],\n  exports: [PlacelineContainerComponent]\n})\nexport class PlacelineContainerModule { }\n",
    "import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {IUserListSummary} from \"ht-models\";\n\n@Component({\n  selector: 'ht-users-summary',\n  template: `<div class=\"flex-column justify-center label-container has-text-grey\">\n  <div *ngIf=\"!hideTotal\" class=\"count text-center\">{{summary.totalUsers}} {{'user' | pluralize: summary.totalUsers}}</div>\n\n  <div class=\"flex-row\" *ngIf=\"summary.totalUsers\">\n    <ng-container *ngFor=\"let datum of summary.chart; trackBy:indexId; let i = index\">\n      <div\n        class=\"bar\"\n        [style.flex-basis.%]=\"datum.value/summary.totalUsers * 100\"\n        [style.background-color]=\"datum.color\"\n        [class.faded]=\"hoveredQuery && hoveredQuery !== datum.label\"\n        [class.bar-selected]=\"hoveredQuery && hoveredQuery === datum.label\"\n      *ngIf=\"datum.value\"></div>\n    </ng-container>\n\n  </div>\n  <div *ngIf=\"summary.totalUsers == 0\" class=\"bar\" style=\"width: 100%; background: #ccc\"></div>\n  <div class=\"flex-row row-gap-4\">\n    <!--<div class=\"box\" [style.background-color]=\"datum.color\"></div>-->\n    <div\n      class=\"graph-label flex-column\"\n      [class.graph-active]=\"datum.selected\"\n      [class.graph-label-selectable]=\"selectable\"\n      (click)=\"selectLabel(datum)\"\n      (mouseenter)=\"onHoverQuery(datum)\"\n      (mouseleave)=\"onHoveroutQuery()\"\n      *ngFor=\"let datum of summary.chart; trackBy:indexId; let i = index\">\n      <strong class=\"text-center is-size-4\" [style.color]=\"datum.color\">\n        {{datum.value}}\n      </strong>\n      <span class=\"text-center\">{{datum.label}}</span>\n\n    </div>\n    <!--<div class=\"box\" style=\"background-color: #ccc;\"></div>-->\n  </div>\n</div>\n<!--{{summary | json}}-->\n`,\n  styles: [`.text-center {\n  text-align: center;\n}\n.text-muted {\n  color: #798E9B;\n}\n.text-right {\n  text-align: right;\n}\n.text-left {\n  text-align: left;\n}\n.text-1 {\n  font-size: 2em;\n}\n.text-4 {\n  font-size: 0.8em;\n}\n.text-capitalize {\n  text-transform: capitalize;\n}\n.text-uppercase {\n  text-transform: uppercase;\n}\n.text-ontime {\n  color: #58ae5b;\n}\n.text-late {\n  color: #E6413E;\n}\n.text-warning {\n  color: #E6413E !important;\n}\n.text-red {\n  color: #E6413E;\n}\n.text-blue {\n  color: #5496F8;\n}\n.truncate {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n.flex-row {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: row;\n          flex-direction: row;\n}\n.flex-column {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: column;\n          flex-direction: column;\n}\n.column-gap-4 > :not(:last-child) {\n  margin-bottom: 4px;\n}\n.row-gap-4 > :not(:last-child) {\n  margin-right: 4px;\n}\n.column-gap-7 > :not(:last-child) {\n  margin-bottom: 7px;\n}\n.row-gap-7 > :not(:last-child) {\n  margin-right: 7px;\n}\n.column-gap-10 > :not(:last-child) {\n  margin-bottom: 10px;\n}\n.row-gap-10 > :not(:last-child) {\n  margin-right: 10px;\n}\n.column-gap-20 > :not(:last-child) {\n  margin-bottom: 20px;\n}\n.row-gap-20 > :not(:last-child) {\n  margin-right: 20px;\n}\n.wrap {\n  -ms-flex-wrap: wrap;\n      flex-wrap: wrap;\n}\n.flex {\n  -webkit-box-flex: 1;\n      -ms-flex: 1;\n          flex: 1;\n}\n.auto {\n  margin: auto;\n}\n.relative {\n  position: relative;\n}\n.space-between {\n  -webkit-box-pack: justify;\n      -ms-flex-pack: justify;\n          justify-content: space-between;\n}\n.space-around {\n  -ms-flex-pack: distribute;\n      justify-content: space-around;\n}\n.justify-center {\n  -webkit-box-pack: center;\n      -ms-flex-pack: center;\n          justify-content: center;\n}\n.flex-center {\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n}\n.align-center {\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n}\n.clickable {\n  cursor: pointer;\n}\n.round-icon {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  width: 23px;\n  height: 23px;\n  background: #315790;\n  border-radius: 50%;\n}\n.flex-half {\n  -ms-flex-preferred-size: 50%;\n      flex-basis: 50%;\n}\n.link-unstyled {\n  color: inherit;\n}\n.link-unstyled:hover {\n  text-decoration: none;\n}\n.half {\n  width: 50%;\n}\n.noselect {\n  -webkit-touch-callout: none;\n  /* iOS Safari */\n  -webkit-user-select: none;\n  /* Chrome/Safari/Opera */\n  /* Konqueror */\n  -moz-user-select: none;\n  /* Firefox */\n  -ms-user-select: none;\n  /* Internet Explorer/Edge */\n  user-select: none;\n  /* Non-prefixed version, currently\n                                  not supported by any browser */\n}\n.hover-shadow:hover {\n  -webkit-box-shadow: 0px 0px 4px 2px rgba(0, 0, 0, 0.16);\n          box-shadow: 0px 0px 4px 2px rgba(0, 0, 0, 0.16);\n}\n.marker-transparent {\n  opacity: 0.4;\n}\n.marker-fade {\n  -webkit-filter: contrast(16%) brightness(160%) blur(0.6px);\n          filter: contrast(16%) brightness(160%) blur(0.6px);\n}\n.tooltip-warning {\n  background: #e04745;\n  color: #fff;\n}\n.tooltip-warning-arrow {\n  border-right-color: #e04745 !important;\n}\n.tooltip-info {\n  background: #5496F8;\n  color: #fff;\n}\n.tooltip-info-arrow {\n  border-right-color: #5496F8 !important;\n}\na {\n  color: inherit;\n  text-decoration: none;\n}\na:hover {\n  color: inherit;\n  text-decoration: none;\n}\na:active {\n  color: inherit;\n  text-decoration: none;\n}\na:focus {\n  outline: none;\n  color: inherit;\n  text-decoration: none;\n}\n.spinner-wave {\n  margin: 0 auto;\n  width: 100px;\n  height: 20px;\n  text-align: center;\n}\n.spinner-wave > div {\n  background-color: #5496F8;\n  height: 100%;\n  width: 6px;\n  display: inline-block;\n  -webkit-animation: wave 1.2s infinite ease-in-out;\n  animation: wave 1.2s infinite ease-in-out;\n}\n.spinner-wave div:nth-child(2) {\n  -webkit-animation-delay: -1.1s;\n  animation-delay: -1.1s;\n}\n.spinner-wave div:nth-child(3) {\n  -webkit-animation-delay: -1s;\n  animation-delay: -1s;\n}\n.spinner-wave div:nth-child(4) {\n  -webkit-animation-delay: -0.9s;\n  animation-delay: -0.9s;\n}\n.spinner-wave div:nth-child(5) {\n  -webkit-animation-delay: -0.8s;\n  animation-delay: -0.8s;\n}\n@-webkit-keyframes wave {\n  0%,\n  40%,\n  100% {\n    -webkit-transform: scaleY(0.4);\n  }\n  20% {\n    -webkit-transform: scaleY(1);\n  }\n}\n@keyframes wave {\n  0%,\n  40%,\n  100% {\n    -webkit-transform: scaleY(0.4);\n            transform: scaleY(0.4);\n  }\n  20% {\n    -webkit-transform: scaleY(1);\n            transform: scaleY(1);\n  }\n}\n@media screen and (max-width: 480px) {\n  .hide-xs {\n    display: none !important;\n  }\n}\n@media screen and (min-width: 480px) {\n  .show-xs {\n    display: none !important;\n  }\n}\n.ht-btn {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  padding: 5px 13px;\n  border: 0;\n  background: #ffffff;\n  color: #52616A;\n  -webkit-box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\n          box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\n}\n.ht-btn:focus {\n  background: #fcfcfc;\n  outline: 0;\n}\n.ht-btn-card:hover {\n  background: #5496F8;\n  color: rgba(255, 255, 255, 0.96);\n  -webkit-box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\n          box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\n}\n.stopped-color {\n  color: #FFBB44;\n}\n.drive-color {\n  color: #5496F8;\n}\n.walk-color {\n  color: #5496F8;\n}\n.moving-color {\n  color: #5496F8;\n}\n.logged_off-color {\n  color: #A9BAC4;\n}\n.network_offline-color {\n  color: #d19191;\n}\n.location_disabled-color {\n  color: #d19191;\n}\n.location_low_accuracy-color {\n  color: #d19191;\n}\n.stopped-bg {\n  background: #FFBB44;\n}\n.drive-bg {\n  background: #5496F8;\n}\n.walk-bg {\n  background: #5496F8;\n}\n.moving-bg {\n  background: #5496F8;\n}\n.logged_off-bg {\n  background: #A9BAC4;\n}\n.network_offline-bg {\n  background: #d19191;\n}\n.location_disabled-bg {\n  background-color: #d19191;\n}\n.location_low_accuracy-bg {\n  background-color: #d19191;\n}\n.ht-box {\n  height: 20px;\n  min-width: 20px;\n  border-radius: 50%;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  color: white;\n  text-shadow: 0px 0.5px 1px #ffffff;\n  font-weight: bold;\n}\n.label-container {\n  min-width: 170px;\n}\n.graph-label {\n  -webkit-transition: color 0.2s;\n  transition: color 0.2s;\n  padding: 1px 5px;\n  color: #52616A;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  border-radius: 4px;\n  font-size: 14px;\n  margin-top: 5px;\n}\n.graph-label:hover {\n  outline: 1px solid #d6d6d6;\n}\n.graph-label-selectable {\n  cursor: pointer;\n}\n.bar {\n  height: 10px;\n  -webkit-transition: width 1s ease-in-out;\n  transition: width 1s ease-in-out;\n  -webkit-transition: opacity 0.3s ease-in-out;\n  transition: opacity 0.3s ease-in-out;\n  float: right;\n}\n.bar:first-child {\n  border-bottom-left-radius: 3px;\n  border-top-left-radius: 3px;\n}\n.bar:last-child {\n  border-bottom-right-radius: 3px;\n  border-top-right-radius: 3px;\n}\n.graph-active {\n  background: #e2e2e2;\n}\n.count {\n  font-size: 21px;\n  color: #52616A;\n  padding-bottom: 18px;\n}\n:host {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: column;\n          flex-direction: column;\n}\n.faded {\n  opacity: 0.4;\n}\n.bar-selected {\n  outline: 1px solid;\n}\n`]\n})\nexport class UsersSummaryComponent implements OnInit {\n  @Output() setQuery: EventEmitter<object> = new EventEmitter();\n  @Output() clearQueryKey: EventEmitter<string> = new EventEmitter();\n  @Input() summary;\n  @Input() hideTotal;\n  @Input() selectable: boolean = false;\n  hoveredQuery;\n\n  constructor() { }\n\n  ngOnInit() {\n\n  }\n\n  onHoverQuery(query) {\n    this.hoveredQuery = query.label;\n  }\n\n  onHoveroutQuery() {\n    this.hoveredQuery = \"\"\n  }\n\n  indexId(index, item) {\n    return item.label\n  }\n\n  setFilter(datum) {\n    const query = {status: datum.values.toString()};\n    this.setQuery.next(query)\n  }\n\n  clearFilter(datum) {\n    this.clearQueryKey.next('status')\n  }\n\n  selectLabel(datum) {\n    if (!this.selectable) return false;\n    if (datum.selected) {\n      this.clearFilter(datum)\n    } else {\n      this.setFilter(datum)\n    }\n  }\n\n}\n",
    "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UsersSummaryComponent } from './users-summary.component';\nimport {SharedModule} from \"../shared/shared.module\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule\n  ],\n  declarations: [UsersSummaryComponent],\n  exports: [UsersSummaryComponent]\n})\nexport class UsersSummaryModule { }\n",
    "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UsersSummaryContainerComponent } from './users-summary-container.component';\nimport {UsersSummaryModule} from \"../users-summary/users-summary.module\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    UsersSummaryModule\n  ],\n  declarations: [UsersSummaryContainerComponent],\n  exports: [UsersSummaryContainerComponent]\n})\nexport class UsersSummaryContainerModule { }\n",
    "import {ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Page} from \"ht-models\";\nimport {GetUrlParam} from \"ht-utility\";\n\n@Component({\n  selector: 'ht-pagination',\n  template: `<!--<p>-->\n  <!--pagination works!-->\n<!--</p>-->\n<!--<p>Count: {{pageDate.count}}</p>-->\n<!--<p>Page: {{currentPage}}</p>-->\n<!--<p>Pages: {{pagesCount}}</p>-->\n<!--<div class=\"pagination-container columns\" *ngIf=\"pagesCount > 1\">-->\n  <!--<div [class.disabled]=\"!pageDate.previous\" (click)=\"onFetchPage(currentPage - 1)\" class=\"pagination-element\">-->\n    <!--<i class=\"fa fa-angle-left\" aria-hidden=\"true\"></i>-->\n  <!--</div>-->\n  <!--<ng-container *ngIf=\"currentPage - 1 > 1\">-->\n    <!--<div (click)=\"onFetchPage(1)\" class=\"\">-->\n      <!--<span class=\"pagination-number\">1</span>-->\n    <!--</div>-->\n    <!--<span>&hellip;</span>-->\n    <!--&lt;!&ndash;<div>.</div>&ndash;&gt;-->\n    <!--&lt;!&ndash;<div>.</div>&ndash;&gt;-->\n    <!--&lt;!&ndash;<div>.</div>&ndash;&gt;-->\n  <!--</ng-container>-->\n\n  <!--<div (click)=\"onFetchPage(page)\" class=\"\" *ngFor=\"let page of visiblePages\" [ngClass]=\"currentPage === page ? 'is-current' : ''\">-->\n    <!--<span class=\"pagination-number\">{{page}}</span>-->\n  <!--</div>-->\n  <!--<ng-container *ngIf=\"pagesCount - currentPage > 2\">-->\n    <!--<span>&hellip;</span>-->\n    <!--&lt;!&ndash;<div>.</div>&ndash;&gt;-->\n    <!--&lt;!&ndash;<div>.</div>&ndash;&gt;-->\n    <!--&lt;!&ndash;<div>.</div>&ndash;&gt;-->\n    <!--<div (click)=\"onFetchPage(pagesCount)\" class=\"\">-->\n      <!--<span class=\"pagination-number\">{{pagesCount}}</span>-->\n    <!--</div>-->\n  <!--</ng-container>-->\n  <!--&lt;!&ndash;<div [class.disabled]=\"currentPage == pagesCount\" (click)=\"onFetchPage(pagesCount)\" class=\"pagination-element\">&ndash;&gt;-->\n  <!--&lt;!&ndash;<i class=\"fa fa-angle-double-right\" aria-hidden=\"true\"></i>&ndash;&gt;-->\n  <!--&lt;!&ndash;</div>&ndash;&gt;-->\n  <!--<div [attr.disabled]=\"!pageDate.next\" (click)=\"onFetchPage(currentPage + 1)\" class=\"\">-->\n    <!--<i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i>-->\n  <!--</div>-->\n<!--</div>-->\n\n<nav class=\"pagination is-small is-centered\" role=\"navigation\" aria-label=\"pagination\" *ngIf=\"pagesCount > 1\">\n  <ul class=\"pagination-list\">\n    <li>\n      <a class=\"pagination-link\" [attr.disabled]=\"!pageDate.previous ? true : null\"  (click)=\"onFetchPage(currentPage - 1)\" aria-label=\"Goto page 1\">\n        <i class=\"fa fa-angle-left\" aria-hidden=\"true\"></i>\n      </a>\n    </li>\n    <ng-container *ngIf=\"currentPage - 1 > 1\">\n      <li (click)=\"onFetchPage(1)\" class=\"\">\n        <a class=\"pagination-link\">1</a>\n      </li>\n      <li>\n        <span class=\"pagination-ellipsis\">&hellip;</span>\n      </li>\n    </ng-container>\n    <li (click)=\"onFetchPage(page)\" class=\"\" *ngFor=\"let page of visiblePages\">\n      <a class=\"pagination-link\" [ngClass]=\"currentPage === page ? 'is-current' : ''\">{{page}}</a>\n    </li>\n    <ng-container *ngIf=\"pagesCount - currentPage > 2\">\n      <li>\n        <span class=\"pagination-ellipsis\">&hellip;</span>\n      </li>\n      <li (click)=\"onFetchPage(pagesCount)\" class=\"\">\n        <a class=\"pagination-link\">{{pagesCount}}</a>\n      </li>\n    </ng-container>\n\n    <li [attr.disabled]=\"!pageDate.next ? true : null\" (click)=\"onFetchPage(currentPage + 1)\" class=\"\">\n      <a class=\"pagination-link\">\n        <i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\n      </a>\n    </li>\n\n\n    <!--<li>-->\n      <!--<span class=\"pagination-ellipsis\">&hellip;</span>-->\n    <!--</li>-->\n    <!--<li>-->\n      <!--<a class=\"pagination-link\" aria-label=\"Goto page 45\">45</a>-->\n    <!--</li>-->\n    <!--<li>-->\n      <!--<a class=\"pagination-link is-current\" aria-label=\"Page 46\" aria-current=\"page\">46</a>-->\n    <!--</li>-->\n    <!--<li>-->\n      <!--<a class=\"pagination-link\" aria-label=\"Goto page 47\">47</a>-->\n    <!--</li>-->\n    <!--<li>-->\n      <!--<span class=\"pagination-ellipsis\">&hellip;</span>-->\n    <!--</li>-->\n    <!--<li>-->\n      <!--<a class=\"pagination-link\" aria-label=\"Goto page 86\">86</a>-->\n    <!--</li>-->\n  </ul>\n</nav>\n\n`,\n  styles: [`.text-center {\n  text-align: center;\n}\n.text-muted {\n  color: #798E9B;\n}\n.text-right {\n  text-align: right;\n}\n.text-left {\n  text-align: left;\n}\n.text-1 {\n  font-size: 2em;\n}\n.text-4 {\n  font-size: 0.8em;\n}\n.text-capitalize {\n  text-transform: capitalize;\n}\n.text-uppercase {\n  text-transform: uppercase;\n}\n.text-ontime {\n  color: #58ae5b;\n}\n.text-late {\n  color: #E6413E;\n}\n.text-warning {\n  color: #E6413E !important;\n}\n.text-red {\n  color: #E6413E;\n}\n.text-blue {\n  color: #5496F8;\n}\n.truncate {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n.flex-row {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: row;\n          flex-direction: row;\n}\n.flex-column {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: column;\n          flex-direction: column;\n}\n.column-gap-4 > :not(:last-child) {\n  margin-bottom: 4px;\n}\n.row-gap-4 > :not(:last-child) {\n  margin-right: 4px;\n}\n.column-gap-7 > :not(:last-child) {\n  margin-bottom: 7px;\n}\n.row-gap-7 > :not(:last-child) {\n  margin-right: 7px;\n}\n.column-gap-10 > :not(:last-child) {\n  margin-bottom: 10px;\n}\n.row-gap-10 > :not(:last-child) {\n  margin-right: 10px;\n}\n.column-gap-20 > :not(:last-child) {\n  margin-bottom: 20px;\n}\n.row-gap-20 > :not(:last-child) {\n  margin-right: 20px;\n}\n.wrap {\n  -ms-flex-wrap: wrap;\n      flex-wrap: wrap;\n}\n.flex {\n  -webkit-box-flex: 1;\n      -ms-flex: 1;\n          flex: 1;\n}\n.auto {\n  margin: auto;\n}\n.relative {\n  position: relative;\n}\n.space-between {\n  -webkit-box-pack: justify;\n      -ms-flex-pack: justify;\n          justify-content: space-between;\n}\n.space-around {\n  -ms-flex-pack: distribute;\n      justify-content: space-around;\n}\n.justify-center {\n  -webkit-box-pack: center;\n      -ms-flex-pack: center;\n          justify-content: center;\n}\n.flex-center {\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n}\n.align-center {\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n}\n.clickable {\n  cursor: pointer;\n}\n.round-icon {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  width: 23px;\n  height: 23px;\n  background: #315790;\n  border-radius: 50%;\n}\n.flex-half {\n  -ms-flex-preferred-size: 50%;\n      flex-basis: 50%;\n}\n.link-unstyled {\n  color: inherit;\n}\n.link-unstyled:hover {\n  text-decoration: none;\n}\n.half {\n  width: 50%;\n}\n.noselect {\n  -webkit-touch-callout: none;\n  /* iOS Safari */\n  -webkit-user-select: none;\n  /* Chrome/Safari/Opera */\n  /* Konqueror */\n  -moz-user-select: none;\n  /* Firefox */\n  -ms-user-select: none;\n  /* Internet Explorer/Edge */\n  user-select: none;\n  /* Non-prefixed version, currently\n                                  not supported by any browser */\n}\n.hover-shadow:hover {\n  -webkit-box-shadow: 0px 0px 4px 2px rgba(0, 0, 0, 0.16);\n          box-shadow: 0px 0px 4px 2px rgba(0, 0, 0, 0.16);\n}\n.marker-transparent {\n  opacity: 0.4;\n}\n.marker-fade {\n  -webkit-filter: contrast(16%) brightness(160%) blur(0.6px);\n          filter: contrast(16%) brightness(160%) blur(0.6px);\n}\n.tooltip-warning {\n  background: #e04745;\n  color: #fff;\n}\n.tooltip-warning-arrow {\n  border-right-color: #e04745 !important;\n}\n.tooltip-info {\n  background: #5496F8;\n  color: #fff;\n}\n.tooltip-info-arrow {\n  border-right-color: #5496F8 !important;\n}\na {\n  color: inherit;\n  text-decoration: none;\n}\na:hover {\n  color: inherit;\n  text-decoration: none;\n}\na:active {\n  color: inherit;\n  text-decoration: none;\n}\na:focus {\n  outline: none;\n  color: inherit;\n  text-decoration: none;\n}\n.spinner-wave {\n  margin: 0 auto;\n  width: 100px;\n  height: 20px;\n  text-align: center;\n}\n.spinner-wave > div {\n  background-color: #5496F8;\n  height: 100%;\n  width: 6px;\n  display: inline-block;\n  -webkit-animation: wave 1.2s infinite ease-in-out;\n  animation: wave 1.2s infinite ease-in-out;\n}\n.spinner-wave div:nth-child(2) {\n  -webkit-animation-delay: -1.1s;\n  animation-delay: -1.1s;\n}\n.spinner-wave div:nth-child(3) {\n  -webkit-animation-delay: -1s;\n  animation-delay: -1s;\n}\n.spinner-wave div:nth-child(4) {\n  -webkit-animation-delay: -0.9s;\n  animation-delay: -0.9s;\n}\n.spinner-wave div:nth-child(5) {\n  -webkit-animation-delay: -0.8s;\n  animation-delay: -0.8s;\n}\n@-webkit-keyframes wave {\n  0%,\n  40%,\n  100% {\n    -webkit-transform: scaleY(0.4);\n  }\n  20% {\n    -webkit-transform: scaleY(1);\n  }\n}\n@keyframes wave {\n  0%,\n  40%,\n  100% {\n    -webkit-transform: scaleY(0.4);\n            transform: scaleY(0.4);\n  }\n  20% {\n    -webkit-transform: scaleY(1);\n            transform: scaleY(1);\n  }\n}\n@media screen and (max-width: 480px) {\n  .hide-xs {\n    display: none !important;\n  }\n}\n@media screen and (min-width: 480px) {\n  .show-xs {\n    display: none !important;\n  }\n}\n.ht-btn {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  padding: 5px 13px;\n  border: 0;\n  background: #ffffff;\n  color: #52616A;\n  -webkit-box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\n          box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\n}\n.ht-btn:focus {\n  background: #fcfcfc;\n  outline: 0;\n}\n.ht-btn-card:hover {\n  background: #5496F8;\n  color: rgba(255, 255, 255, 0.96);\n  -webkit-box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\n          box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\n}\n.stopped-color {\n  color: #FFBB44;\n}\n.drive-color {\n  color: #5496F8;\n}\n.walk-color {\n  color: #5496F8;\n}\n.moving-color {\n  color: #5496F8;\n}\n.logged_off-color {\n  color: #A9BAC4;\n}\n.network_offline-color {\n  color: #d19191;\n}\n.location_disabled-color {\n  color: #d19191;\n}\n.location_low_accuracy-color {\n  color: #d19191;\n}\n.stopped-bg {\n  background: #FFBB44;\n}\n.drive-bg {\n  background: #5496F8;\n}\n.walk-bg {\n  background: #5496F8;\n}\n.moving-bg {\n  background: #5496F8;\n}\n.logged_off-bg {\n  background: #A9BAC4;\n}\n.network_offline-bg {\n  background: #d19191;\n}\n.location_disabled-bg {\n  background-color: #d19191;\n}\n.location_low_accuracy-bg {\n  background-color: #d19191;\n}\n.pagination {\n  padding: 20px 0;\n  width: 100%;\n}\n.pagination-container {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  padding: 30px 10px;\n}\n.pagination-container > :not(:last-child) {\n  margin-right: 7px;\n}\n.pagination-element {\n  border: 1px solid #D9D9D9;\n  width: 28px;\n  height: 28px;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-pack: center;\n      -ms-flex-pack: center;\n          justify-content: center;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  background: white;\n  border-radius: 3px;\n  cursor: pointer;\n  color: #666666;\n}\n.pagination-element.disabled {\n  cursor: not-allowed;\n  pointer-events: none;\n}\n.pagination-element.disabled i {\n  color: #CCCCCC;\n}\n.pagination-element i {\n  color: #666666;\n}\n.pagination-element .pagination-number {\n  font-size: 12px;\n  color: #666666;\n  line-height: 18px;\n}\n.pagination-element.selected {\n  background: #108EE9;\n}\n.pagination-element.selected .pagination-number {\n  color: #ffffff;\n}\n.disabled {\n  cursor: not-allowed;\n  pointer-events: none;\n  color: #CCCCCC;\n}\n.fa {\n  font-size: 1.3em;\n}\n`],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PaginationComponent implements OnInit {\n  @Input() pageDate: Page<any>;\n  @Input() pageSize: number = 10;\n  @Output() fetchPage: EventEmitter<number> = new EventEmitter();\n  constructor() { }\n\n  ngOnInit() {\n\n  }\n\n  get currentPage() {\n    const preUrl = this.pageDate.previous;\n    let page = 1;\n    if (preUrl) {\n      const prevPage = GetUrlParam('page', this.pageDate.previous) || 1;\n      // console.log(prevPage);\n      page = +prevPage + 1;\n    }\n    return page\n  }\n\n  get pagesCount(): number {\n    const count = this.pageDate.count;\n    // let rem = count % this.pageSize;\n    return Math.ceil(count / this.pageSize)\n  }\n\n  get visiblePages() {\n    return Array(this.pagesCount).fill(1).map((n, i) => n + i).filter((i) => {\n      if (this.currentPage === 1) {\n        return (this.currentPage - i >= -2 );\n      } else if (this.currentPage + 1 === i) {\n        return true;\n      } else if (this.currentPage + 2 === i) {\n        return true;\n      } else if (this.currentPage === i) {\n        return true;\n      } else if (this.currentPage === this.pagesCount) {\n        return (this.currentPage - i <= 2);\n      }\n      return false;\n    });\n  }\n\n  onFetchPage(pageNumber: number) {\n    // console.log(pageNumber);\n    if (pageNumber < 1 || pageNumber > this.pagesCount) return;\n    this.fetchPage.next(pageNumber);\n    // this.fetchPage.emit(pageNumber);\n    // this.currentPage = pageNumber;\n    // this.hasNextPage = (this.currentPage < this.numberOfPages);\n    // this.hasPreviousPage = (this.currentPage > 1);\n    // this.pages = this.getVisiblePages();\n  }\n\n}\n",
    "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PaginationComponent } from './pagination.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [PaginationComponent],\n  exports: [PaginationComponent]\n})\nexport class PaginationModule { }\n",
    "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UsersContainerComponent } from './users-container.component';\nimport {UsersModule} from \"../users/users.module\";\nimport {PlacelineModule} from \"../placeline/placeline.module\";\nimport {SharedModule} from \"../shared/shared.module\";\nimport {UserCardModule} from \"../user-card/user-card.module\";\nimport {PlacelineContainerModule} from \"../placeline-container/placeline-container.module\";\nimport {UsersSummaryModule} from \"../users-summary/users-summary.module\";\nimport {UsersSummaryContainerModule} from \"../users-summary-container/users-summary-container.module\";\nimport {PaginationModule} from \"../pagination/pagination.module\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    UsersModule,\n    // UserCardModule,\n    PlacelineModule,\n    PlacelineContainerModule,\n    SharedModule,\n    UsersSummaryContainerModule,\n    PaginationModule\n  ],\n  declarations: [UsersContainerComponent],\n  exports: [UsersContainerComponent]\n})\nexport class UsersContainerModule { }\n",
    "import {Component, Input, OnInit} from '@angular/core';\nimport {IGroup} from \"ht-models\";\n\n@Component({\n  selector: 'ht-groups',\n  template: `<div class=\"card-stack\">\n  <a [routerLink]=\"['/groups', group[groupIdParam]]\" class=\"card\" *ngFor=\"let group of groups\">\n    <div class=\"card-content-mid\">\n      {{group.name}}\n    </div>\n  </a>\n</div>\n`,\n  styles: [`.text-center {\n  text-align: center;\n}\n.text-muted {\n  color: #798E9B;\n}\n.text-right {\n  text-align: right;\n}\n.text-left {\n  text-align: left;\n}\n.text-1 {\n  font-size: 2em;\n}\n.text-4 {\n  font-size: 0.8em;\n}\n.text-capitalize {\n  text-transform: capitalize;\n}\n.text-uppercase {\n  text-transform: uppercase;\n}\n.text-ontime {\n  color: #58ae5b;\n}\n.text-late {\n  color: #E6413E;\n}\n.text-warning {\n  color: #E6413E !important;\n}\n.text-red {\n  color: #E6413E;\n}\n.text-blue {\n  color: #5496F8;\n}\n.truncate {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n.flex-row {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: row;\n          flex-direction: row;\n}\n.flex-column {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: column;\n          flex-direction: column;\n}\n.column-gap-4 > :not(:last-child) {\n  margin-bottom: 4px;\n}\n.row-gap-4 > :not(:last-child) {\n  margin-right: 4px;\n}\n.column-gap-7 > :not(:last-child) {\n  margin-bottom: 7px;\n}\n.row-gap-7 > :not(:last-child) {\n  margin-right: 7px;\n}\n.column-gap-10 > :not(:last-child) {\n  margin-bottom: 10px;\n}\n.row-gap-10 > :not(:last-child) {\n  margin-right: 10px;\n}\n.column-gap-20 > :not(:last-child) {\n  margin-bottom: 20px;\n}\n.row-gap-20 > :not(:last-child) {\n  margin-right: 20px;\n}\n.wrap {\n  -ms-flex-wrap: wrap;\n      flex-wrap: wrap;\n}\n.flex {\n  -webkit-box-flex: 1;\n      -ms-flex: 1;\n          flex: 1;\n}\n.auto {\n  margin: auto;\n}\n.relative {\n  position: relative;\n}\n.space-between {\n  -webkit-box-pack: justify;\n      -ms-flex-pack: justify;\n          justify-content: space-between;\n}\n.space-around {\n  -ms-flex-pack: distribute;\n      justify-content: space-around;\n}\n.justify-center {\n  -webkit-box-pack: center;\n      -ms-flex-pack: center;\n          justify-content: center;\n}\n.flex-center {\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n}\n.align-center {\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n}\n.clickable {\n  cursor: pointer;\n}\n.round-icon {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  width: 23px;\n  height: 23px;\n  background: #315790;\n  border-radius: 50%;\n}\n.flex-half {\n  -ms-flex-preferred-size: 50%;\n      flex-basis: 50%;\n}\n.link-unstyled {\n  color: inherit;\n}\n.link-unstyled:hover {\n  text-decoration: none;\n}\n.half {\n  width: 50%;\n}\n.noselect {\n  -webkit-touch-callout: none;\n  /* iOS Safari */\n  -webkit-user-select: none;\n  /* Chrome/Safari/Opera */\n  /* Konqueror */\n  -moz-user-select: none;\n  /* Firefox */\n  -ms-user-select: none;\n  /* Internet Explorer/Edge */\n  user-select: none;\n  /* Non-prefixed version, currently\n                                  not supported by any browser */\n}\n.hover-shadow:hover {\n  -webkit-box-shadow: 0px 0px 4px 2px rgba(0, 0, 0, 0.16);\n          box-shadow: 0px 0px 4px 2px rgba(0, 0, 0, 0.16);\n}\n.marker-transparent {\n  opacity: 0.4;\n}\n.marker-fade {\n  -webkit-filter: contrast(16%) brightness(160%) blur(0.6px);\n          filter: contrast(16%) brightness(160%) blur(0.6px);\n}\n.tooltip-warning {\n  background: #e04745;\n  color: #fff;\n}\n.tooltip-warning-arrow {\n  border-right-color: #e04745 !important;\n}\n.tooltip-info {\n  background: #5496F8;\n  color: #fff;\n}\n.tooltip-info-arrow {\n  border-right-color: #5496F8 !important;\n}\na {\n  color: inherit;\n  text-decoration: none;\n}\na:hover {\n  color: inherit;\n  text-decoration: none;\n}\na:active {\n  color: inherit;\n  text-decoration: none;\n}\na:focus {\n  outline: none;\n  color: inherit;\n  text-decoration: none;\n}\n.spinner-wave {\n  margin: 0 auto;\n  width: 100px;\n  height: 20px;\n  text-align: center;\n}\n.spinner-wave > div {\n  background-color: #5496F8;\n  height: 100%;\n  width: 6px;\n  display: inline-block;\n  -webkit-animation: wave 1.2s infinite ease-in-out;\n  animation: wave 1.2s infinite ease-in-out;\n}\n.spinner-wave div:nth-child(2) {\n  -webkit-animation-delay: -1.1s;\n  animation-delay: -1.1s;\n}\n.spinner-wave div:nth-child(3) {\n  -webkit-animation-delay: -1s;\n  animation-delay: -1s;\n}\n.spinner-wave div:nth-child(4) {\n  -webkit-animation-delay: -0.9s;\n  animation-delay: -0.9s;\n}\n.spinner-wave div:nth-child(5) {\n  -webkit-animation-delay: -0.8s;\n  animation-delay: -0.8s;\n}\n@-webkit-keyframes wave {\n  0%,\n  40%,\n  100% {\n    -webkit-transform: scaleY(0.4);\n  }\n  20% {\n    -webkit-transform: scaleY(1);\n  }\n}\n@keyframes wave {\n  0%,\n  40%,\n  100% {\n    -webkit-transform: scaleY(0.4);\n            transform: scaleY(0.4);\n  }\n  20% {\n    -webkit-transform: scaleY(1);\n            transform: scaleY(1);\n  }\n}\n@media screen and (max-width: 480px) {\n  .hide-xs {\n    display: none !important;\n  }\n}\n@media screen and (min-width: 480px) {\n  .show-xs {\n    display: none !important;\n  }\n}\n.ht-btn {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  padding: 5px 13px;\n  border: 0;\n  background: #ffffff;\n  color: #52616A;\n  -webkit-box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\n          box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\n}\n.ht-btn:focus {\n  background: #fcfcfc;\n  outline: 0;\n}\n.ht-btn-card:hover {\n  background: #5496F8;\n  color: rgba(255, 255, 255, 0.96);\n  -webkit-box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\n          box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\n}\n.stopped-color {\n  color: #FFBB44;\n}\n.drive-color {\n  color: #5496F8;\n}\n.walk-color {\n  color: #5496F8;\n}\n.moving-color {\n  color: #5496F8;\n}\n.logged_off-color {\n  color: #A9BAC4;\n}\n.network_offline-color {\n  color: #d19191;\n}\n.location_disabled-color {\n  color: #d19191;\n}\n.location_low_accuracy-color {\n  color: #d19191;\n}\n.stopped-bg {\n  background: #FFBB44;\n}\n.drive-bg {\n  background: #5496F8;\n}\n.walk-bg {\n  background: #5496F8;\n}\n.moving-bg {\n  background: #5496F8;\n}\n.logged_off-bg {\n  background: #A9BAC4;\n}\n.network_offline-bg {\n  background: #d19191;\n}\n.location_disabled-bg {\n  background-color: #d19191;\n}\n.location_low_accuracy-bg {\n  background-color: #d19191;\n}\n.card-stack {\n  max-width: 500px;\n  margin: auto;\n}\n`]\n})\nexport class GroupsComponent implements OnInit {\n  @Input() groups: IGroup[];\n  @Input() groupIdParam: string = 'id';\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n",
    "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { GroupsComponent } from './groups.component';\nimport {RouterModule} from \"@angular/router\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule\n  ],\n  declarations: [GroupsComponent],\n  exports: [GroupsComponent]\n})\nexport class GroupsModule { }\n",
    "import {HtGroupsClient} from \"ht-client\";\n\nexport class HtGroupsService extends HtGroupsClient {\n\n}\n",
    "import {Component, Input, OnInit} from '@angular/core';\nimport {HtGroupsService} from \"../ht/ht-groups.service\";\n@Component({\n  selector: 'ht-groups-container',\n  template: `<div class=\"container\" *ngIf=\"groups$ | async as groups\">\n  <ht-groups [groupIdParam]=\"groupIdParam\" [groups]=\"groups\"></ht-groups>\n</div>\n`,\n  styles: [`.container {\n  width: 100%;\n}\n`]\n})\nexport class GroupsContainerComponent implements OnInit {\n  groups$;\n  @Input() groupIdParam: string = 'id';\n  constructor(\n    private groupsClient: HtGroupsService\n  ) { }\n\n  ngOnInit() {\n    this.groupsClient.list.setActive();\n    this.groups$ = this.groupsClient.list.dataArray$;\n    // this.clientService.groups.list.setOptions({query: {}});\n    // this.clientService.groups.list.initListener();\n    // this.groups$ = this.clientService.groups.list.dataArray$.map((groups) => {\n    //   return _.filter(groups, (group: IGroup) => !!group[this.groupIdParam])\n    // })\n  }\n\n}\n",
    "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { GroupsContainerComponent } from './groups-container.component';\nimport {GroupsModule} from \"../groups/groups.module\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    GroupsModule\n  ],\n  declarations: [GroupsContainerComponent],\n  exports: [GroupsContainerComponent]\n})\nexport class GroupsContainerModule { }\n",
    "import { Injectable } from '@angular/core';\nimport {Observable} from \"rxjs/Observable\";\nimport {filter, map, switchMap, take, withLatestFrom} from \"rxjs/operators\";\nimport {HtGroupsService} from \"../ht/ht-groups.service\";\nimport {BehaviorSubject} from \"rxjs/BehaviorSubject\";\nimport {IGroup} from \"ht-models\";\nimport {Subscription} from \"rxjs/Subscription\";\nimport {Page} from \"ht-models\";\nimport {combineLatest} from \"rxjs/observable/combineLatest\";\nimport {of} from \"rxjs/observable/of\";\n\n@Injectable()\nexport class GroupsChartService {\n  // groupsLevels = [];\n  // selectedGroups = [];\n  // selectedGroup$: Observable<any>;\n  error;\n  selectedGroups$: BehaviorSubject<Array<IGroup | null>> = new BehaviorSubject([]);\n  groupsLevelsEntity$: BehaviorSubject<IGroupsLevelEntity> = new BehaviorSubject({});\n  groupsLevels$: Observable<any[]>;\n  groupsSub: Subscription;\n  constructor(\n    private groupsService: HtGroupsService\n  ) {\n    this.setGroupsLevels();\n    this.groupsLevels$ = combineLatest(\n      this.selectedGroups$,\n      this.groupsLevelsEntity$,\n      (selectedGroups, groupslevelsEntity) => {\n        return selectedGroups.map((group) => {\n          const id = group ? group.id : null;\n          return groupslevelsEntity[id] ? groupslevelsEntity[id] : null\n        })\n      }\n    )\n\n  }\n\n  setRootGroupId(groupId: string | null) {\n    this.selectedGroups$.pipe(\n      take(1),\n      filter(groups => {\n        const id = groups[0] ? groups[0].id : null;\n        return id !== groupId || (groupId == null && !groups.length);\n      }),\n      switchMap(() => {\n        return groupId ? this.groupsService.item.api$(groupId) : of(null)\n      })\n    ).subscribe((group: IGroup | null) => {\n      this.setSelectedGroup(group, 0)\n    })\n  };\n\n  setSelectedGroup(group: IGroup | null, level: number) {\n    this.selectedGroups$.asObservable().pipe(\n      take(1),\n      map((selectedGroups: Array<IGroup | null>) => {\n        selectedGroups.splice(level);\n        selectedGroups.push(group);\n        return selectedGroups\n      })\n    ).subscribe((selectedGroups) => {\n      this.selectedGroups$.next(selectedGroups)\n    })\n  };\n\n\n  setGroupsLevels() {\n    if (this.groupsSub) return false;\n\n    this.groupsSub = this.selectedGroups$.pipe(\n      filter(data => !!data.length),\n      withLatestFrom(this.groupsLevelsEntity$),\n      switchMap(([selectedGroups, groupsLevels]) => {\n        const level = selectedGroups.length;\n        const lastId = selectedGroups[level - 1] ? selectedGroups[level - 1].id : null;\n        // groupsLevels.splice(length);\n        groupsLevels = selectedGroups.reduce((acc, group) => {\n          const groupId = group ? group.id : null;\n          return groupsLevels[groupId] ? {...acc, [groupId]: groupsLevels[groupId]} : acc\n        }, {});\n\n        if (groupsLevels[lastId]) {\n          return of(groupsLevels)\n        } else {\n          return this.getGroups(lastId).pipe(\n            map((groupsPage: Page<IGroup>) => {\n              return {...groupsLevels, [lastId]: groupsPage.results}\n            })\n          )\n        }\n\n        // return of(groupsLevels)\n      })\n    ).subscribe((data: IGroupsLevelEntity) => {\n      this.groupsLevelsEntity$.next(data)\n    })\n  };\n\n  getGroups(parentId: string | null): Observable<Page<IGroup>> {\n    return parentId ? this.groupsService.getChildren(parentId) : this.groupsService.getRoot();\n  }\n\n  setLevel(level: number) {\n    this.selectedGroups$.asObservable().pipe(\n      take(1),\n      map((selectedGroups: Array<IGroup | null>) => {\n        selectedGroups.splice(level + 1);\n        return selectedGroups\n      })\n    ).subscribe((selectedGroups) => {\n      this.selectedGroups$.next(selectedGroups)\n    });\n    // this.setSelectedGroup(group, level + 1)\n  }\n\n};\n\nexport interface IGroupsLevelEntity {\n  [groupId: string]: IGroup[]\n}\n",
    "import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {IGroup} from \"ht-models\";\nimport {GroupsChartService} from \"./groups-chart.service\";\nimport {BehaviorSubject} from \"rxjs/BehaviorSubject\";\nimport {Observable} from \"rxjs/Observable\";\n\n@Component({\n  selector: 'ht-groups-chart-container',\n  template: `<ng-container *ngIf=\"selectedGroups$ | async as selectedGroups\">\n  <nav class=\"breadcrumb has-arrow-separator\" aria-label=\"breadcrumbs\">\n    <ul>\n      <li [class.is-active]=\"l\" (click)=\"groupsChartService.setLevel(i)\" *ngFor=\"let group of selectedGroups; let l = last; let i = index\">\n        <a *ngIf=\"group; else root\">\n          <span>{{group.name}}</span>\n        </a>\n        <ng-template #root>\n          <a>\n            <span class=\"icon is-small\"><i class=\"fa fa-home\"></i></span>\n            <span>Root groups</span>\n          </a>\n        </ng-template>\n      </li>\n    </ul>\n  </nav>\n\n  <div class=\"container\">\n    <ng-template #notFound>\n      <div>\n        No Group found\n      </div>\n    </ng-template>\n    <div class=\"flex-row wrap group-container\" *ngIf=\"!error\">\n      <div class=\"flex-column group-container-list bar card-stack\" *ngFor=\"let groups of groupsLevels$ | async; let i = index\">\n        <div class=\"text-center ht-level\">\n          <span class=\"\">Level {{i + 1}}</span>\n        </div>\n        <div class=\"flex-column\" *ngIf=\"groups; else empty\">\n          <div (click)=\"setGroup(group)\" class=\"card card-clickable is-primary\" [class.card-active]=\"selectedGroups[i + 1] && selectedGroups[i + 1].id == group.id\" *ngFor=\"let group of groups\">\n            <div class=\"card-content is-primary flex-row\">\n              <div class=\"flex\">\n                {{group.name}}\n              </div>\n              <div (click)=\"selectGroup(group, i, $event)\" class=\"button is-small is-primary\">\n                <div class=\"icon\">\n                  <i class=\"fa fa-angle-right\"></i>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"card card-content has-text-grey-light has-text-centered\" *ngIf=\"groups.length == 0\">\n            No Sub-group\n          </div>\n        </div>\n        <ng-template #empty>\n          <h3 class=\"text-center msg bar has-text-grey-light has-text-centered\">\n            Loading\n          </h3>\n        </ng-template>\n      </div>\n\n\n    </div>\n  </div>\n</ng-container>\n`,\n  styles: [`.bar {\n  width: 200px;\n  min-width: 200px;\n}\n.card-content {\n  padding: 10px 13px;\n}\n.card-active {\n  background-color: #5496F8;\n  color: white !important;\n}\n.card-active .button {\n  display: none;\n}\n.action {\n  background: #798E9B;\n  color: white;\n  padding: 0 8px;\n  border-radius: 3px;\n}\n.action:hover {\n  background-color: #52616A;\n}\n.group-container {\n  margin: 20px 0;\n}\n.group-container-list {\n  margin: 20px 0;\n}\n.msg {\n  margin-top: 60px;\n}\n.ht-level {\n  padding: 8px 16px;\n  background-color: #52616A;\n  color: white;\n}\na:focus {\n  color: initial;\n}\n.breadcrumb {\n  padding: 0 30px;\n  background-color: #fff;\n  border-bottom: 1px solid #C9D6DE;\n}\n.groups-list {\n  max-height: 400px;\n  overflow: auto;\n}\n`]\n})\nexport class GroupsChartContainerComponent implements OnInit {\n  loading: boolean = false;\n\n  @Input() groupId: string;\n  @Output() onGroup: EventEmitter<IGroup> = new EventEmitter();\n  constructor(\n    public groupsChartService: GroupsChartService\n  ) {\n\n  }\n\n  ngOnInit() {\n    const groupId = this.groupId ? this.groupId : null;\n    this.groupsChartService.setRootGroupId(groupId)\n  }\n\n  get selectedGroups$(): BehaviorSubject<Array<IGroup | null>> {\n    return this.groupsChartService.selectedGroups$;\n  }\n\n  get groupsLevels$(): Observable<any[]> {\n    return this.groupsChartService.groupsLevels$;\n  }\n\n  // get selectedGroups() {\n  //   return this.groupsChartService.selectedGroups;\n  // }\n  //\n  // get groupsLevels() {\n  //   return this.groupsChartService.groupsLevels;\n  // }\n  //\n  // get selectedGroup$() {\n  //   return this.groupsChartService.selectedGroup$;\n  // }\n\n  setGroup(group) {\n    this.onGroup.next(group)\n  }\n\n  selectGroup(group, level, event) {\n    const id = group.id;\n    event.stopPropagation();\n    event.preventDefault();\n    this.groupsChartService.setSelectedGroup(group, level + 1)\n\n  }\n\n}\n"
  ],
  "names": [
    "ar",
    "__spread",
    "this",
    "i",
    "arguments",
    "length",
    "concat",
    "__read",
    "UserCardComponent",
    "selectedUserId",
    "action",
    "onAction",
    "EventEmitter",
    "showStatus",
    "prototype",
    "hoverIn",
    "hovered",
    "hoverOut",
    "getShowStatus",
    "user",
    "segments",
    "last",
    "event",
    "stopPropagation",
    "ngOnChanges",
    "a",
    "ProfileComponent",
    "ngOnInit",
    "changeDetection",
    "ChangeDetectionStrategy",
    "OnPush",
    "ctorParameters",
    "BatteryIconComponent",
    "battery",
    "batteryClass",
    "level",
    "decorators",
    "type",
    "Component",
    "args",
    "propDecorators",
    "Input",
    "layout",
    "TimeStringPipe",
    "PluralizePipe",
    "transform",
    "value",
    "suffix",
    "singularSuffix",
    "ButtonComponent",
    "LoadingBarComponent",
    "DropdownDirective",
    "appDropdown",
    "show",
    "onClick",
    "HostBinding",
    "hover",
    "onMouseLeave",
    "HostListener",
    "DotPipe",
    "NameCasePipe",
    "LoadingDotsComponent",
    "UsersStatusStringPipe",
    "ActionStatusStringPipe",
    "UserCardModule",
    "NgModule",
    "declarations",
    "exports",
    "UsersComponent",
    "getAction",
    "indexId",
    "index",
    "item",
    "transition",
    "animate",
    "style",
    "height",
    "opacity",
    "trigger",
    "users",
    "selectedUserDataId",
    "SharedModule",
    "HtMapService",
    "HtMapClass",
    "userService",
    "hasMap",
    "color",
    "Color",
    "blue",
    "label",
    "values",
    "red",
    "UsersContainerComponent",
    "_this",
    "pageData",
    "results",
    "pipe",
    "map$1",
    "data",
    "distinctUntilChanged",
    "selectedUserDataId$",
    "placeline",
    "id$",
    "selectedUserId$",
    "list",
    "Object",
    "defineProperty",
    "configurable",
    "clear",
    "mapService",
    "segmentTrace",
    "trace",
    "payload",
    "PlacelineComponent",
    "isSegmentLive",
    "old",
    "display",
    "seconds_elapsed_since_last_heartbeat",
    "segment",
    "getPipeClass",
    "status",
    "activity",
    "NameCase",
    "getActivityPlaceAddress",
    "place",
    "locality",
    "reason",
    "getEventDisplay",
    "text",
    "subtext",
    "started_at",
    "lastSeg",
    "ended_at",
    "duration",
    "Date",
    "getTime",
    "endMin",
    "startMin",
    "gap",
    "assign",
    "getSegmentStyle",
    "time",
    "activityText",
    "events",
    "id",
    "gaps",
    "push",
    "typeCount",
    "actionMap",
    "actionShort",
    "indexPlaceline",
    "selector",
    "template",
    "styles",
    "ChangeDetectorRef",
    "selectedSegment",
    "Output",
    "userData",
    "userClientService",
    "showUserCard",
    "PlacelineContainerComponent",
    "selectedSegmentId$",
    "segmentResetId$",
    "userData$",
    "data$",
    "userId",
    "setId",
    "onHighlightSegment",
    "segmentId",
    "setSegmentSelectedId",
    "onSelectSegmentId",
    "setSegmentResetMapId",
    "ngOnDestroy",
    "clearData",
    "HtUsersService",
    "PlacelineContainerModule",
    "imports",
    "CommonModule",
    "PlacelineModule",
    "UsersSummaryContainerComponent",
    "usersClientService",
    "onClearQueryKey",
    "key",
    "clearQueryKey",
    "setQuery",
    "query$$1",
    "setQueryReset",
    "summary",
    "queryLabels",
    "hideTotal",
    "selectable",
    "UsersSummaryComponent",
    "setFilter",
    "datum",
    "toString",
    "next",
    "clearFilter",
    "selectLabel",
    "selected",
    "UsersSummaryModule",
    "UsersSummaryContainerModule",
    "PaginationComponent",
    "pageSize",
    "Math",
    "ceil",
    "count",
    "onGroup",
    "GroupsChartContainerComponent",
    "groupId",
    "groupsChartService",
    "setRootGroupId",
    "enumerable",
    "get",
    "groupsLevels$",
    "selectGroup",
    "group",
    "preventDefault",
    "setSelectedGroup",
    "GroupsChartService",
    "RouterModule",
    "MapComponent",
    "elRef",
    "htMapService",
    "options",
    "onReady",
    "loading",
    "showReset",
    "mapInstance",
    "onMapResize",
    "inValidateSize",
    "resetMap",
    "ngAfterViewInit",
    "renderMap",
    "el",
    "map",
    "Optional",
    "mapElem",
    "ViewChild",
    "MapModule",
    "MapContainerComponent",
    "showLoading",
    "subs",
    "setCompoundData$",
    "roots",
    "highlighted$",
    "segmentSelectedId$",
    "filter$",
    "resetMap$",
    "loading$1",
    "loading$",
    "ngAfterContentInit",
    "listAll",
    "usersCluster",
    "MapContainerModule",
    "PlacelineMapContainerComponent",
    "showSidebar",
    "PlacelineMapContainerModule",
    "UsersMapContainerComponent",
    "hasPlaceline",
    "apiType",
    "ApiType",
    "analytics",
    "showFilter",
    "showAll",
    "setActive",
    "UsersFilterComponent",
    "cd",
    "query$",
    "of$1",
    "setTimeout",
    "statusFiltes",
    "filterClass",
    "statusQueryArray",
    "sortingLabels",
    "sortingQueryLabel",
    "ordering$",
    "showFilter$",
    "onQuery",
    "setStatus",
    "ordering",
    "UserTableModule",
    "DataTableModule",
    "UserTableComponent",
    "DateRangeModule",
    "UsersAnalyticsListComponent",
    "destroy$",
    "Symbol",
    "component",
    "Observable$1",
    "observer",
    "Error",
    "complete",
    "orignalDestroy",
    "call",
    "_$$1",
    "undefined",
    "source",
    "takeUntil",
    "noData",
    "className",
    "MapInstance",
    "StopsHeatmapService",
    "setData",
    "instance",
    "service",
    "dateRangeService$",
    "dateRangeFactory",
    "config",
    "initialDateRange",
    "DateRangeMap",
    "last_7_days",
    "title",
    "userClient",
    "usersClientFactory",
    "dateRange$",
    "client",
    "heatmap",
    "StopsHeatmapTrace",
    "setPageData$",
    "usersAnalyticsListPresets",
    "stops_heatmap",
    "UsersAnalyticsListService",
    "initialConfig",
    "query",
    "tags",
    "tableFormat",
    "current_location_disabled",
    "updateStrategy",
    "hideDatePicker",
    "userTableFormat",
    "last_heartbeat_at",
    "max_stop_duration",
    "name",
    "stop_duration",
    "total_duration",
    "toFixed",
    "network_offline_duration",
    "ActionsHeatmapService",
    "active",
    "initClient",
    "Injectable",
    "ActionsStatusGraphService",
    "chartFormat",
    "graphData",
    "completed",
    "max_distance",
    "ActionsAnalyticsListService",
    "componentFactoryResolver",
    "AnalyticsItemComponent",
    "addComponent",
    "ComponentFactoryResolver",
    "slot",
    "AnalyticsSlotDirective",
    "AnalyticsSelectorComponent",
    "analyticsItemsService",
    "_a",
    "isActive",
    "preset",
    "choosenPreset",
    "includes",
    "AnalyticsContainerModule",
    "ActionsAnalyticsListModule",
    "ActionsSummaryChartModule",
    "AnalyticsContainerComponent",
    "AnalyticsTitleComponent",
    "entryComponents",
    "http",
    "http$$1",
    "HtAccountService",
    "_super",
    "apply",
    "__extends",
    "AccountsClient",
    "HtActionsService",
    "HtActionsClient",
    "TOKEN",
    "InjectionToken",
    "mapServiceFactory",
    "mapType",
    "userClientServiceFactory",
    "actionClientServiceFactory",
    "actionsClientFactory",
    "groupClientServiceFactory",
    "groupsClientFactory",
    "HtModule",
    "forRoot",
    "ngModule",
    "provide",
    "useValue",
    "token",
    "HtClientService",
    "useFactory",
    "clientServiceFactory",
    "deps",
    "HttpClient",
    "HttpClientModule"
  ],
  "mappings": "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"
}
